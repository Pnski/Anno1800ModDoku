{
	"CAccountSettings":
	[
		{
			"Alias" : "AccountSettings",
			"IsStatic" : "true",
			"ReturnType" : "CAccountSettings",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAchievementAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AchievementAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CAchievementAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Title",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAchievementManager":
	[
		{
			"Alias" : "Achievements",
			"IsStatic" : "true",
			"ReturnType" : "CAchievementManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Points",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockByCategory",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CActiveTradeManager":
	[
		{
			"Alias" : "ActiveTrade",
			"IsStatic" : "true",
			"ReturnType" : "CActiveTradeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeOffer",
			"IsStatic" : "false",
			"ReturnType" : "CActiveTradeOffer",
			"Comment" : "Returns the current trader offer",
			"Arguments" :
			{

			}
		}
	],
	"CActiveTradeOffer":
	[
		{
			"Alias" : "IsActiveTradeActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the current player currently does an active trade",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TraderPassiveTrade",
			"IsStatic" : "false",
			"ReturnType" : "CPassiveTradeController",
			"Comment" : "Returns the passive trade controller of the interacting trader",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorTrader",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTrader",
			"Comment" : "Returns the trader property of the participant who owns the kontor. Might be null if we trade with a second party",
			"Arguments" :
			{

			}
		}
	],
	"CAICheatHandler":
	[
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleIslandRole",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "rdint16"
				},
				"role" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OverwriteNextConstructionRequest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetQuickBuildFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuickBuildFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "BuildUntil",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetBuildUntilFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildUntilFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "FakeNoSpace",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"GUID" :
				{
					"Type" : "int"
				},
				"useToggleLogic" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ResetFakeNoSpaceFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FakeNoSpaceFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"searchTerm" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CAIConstructionManager":
	[
		{
			"Alias" : "AiConstruction",
			"IsStatic" : "true",
			"ReturnType" : "CAIConstructionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Cheats",
			"IsStatic" : "false",
			"ReturnType" : "CAICheatHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAIGlobalCheatHandler":
	[
		{
			"Alias" : "DebugBuildMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"buildMode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleBenchmarkMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleStatisticsMarker",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"markerIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsGraph",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"graphIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flagIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleStatisticsLocal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAIMetaShipHandler":
	[
		{
			"Alias" : "SkipRequest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReleaseShip",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"purpose" :
				{
					"Type" : "int"
				},
				"shipMetaObjID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleShipLog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FulfillRequest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "AIShipRequestID"
				}
			}
		}
	],
	"CAIUnitManager":
	[
		{
			"Alias" : "AiUnit",
			"IsStatic" : "true",
			"ReturnType" : "CAIUnitManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAnimalManager":
	[
		{
			"Alias" : "Animals",
			"IsStatic" : "true",
			"ReturnType" : "CAnimalManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetDebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cycles through debug modes",
			"Arguments" :
			{
				"debugCommand" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaAttractivityManager":
	[
		{
			"Alias" : "Attractivity",
			"IsStatic" : "true",
			"ReturnType" : "CAreaAttractivityManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivityType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "datasets::AttractivityType type",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatChangeAttractivityNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"increase" :
				{
					"Type" : "bool"
				},
				"bigStep" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CultureStatusFluff",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatusMissingAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextCityStatusAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenessForCityLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CityStatus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaEconomy":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmount",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmountAll",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Population Count",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CPopulationAsset>",
			"Comment" : "Returns the assets for all settled population levels on this island. Skips populations with 0 residents.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDistributionPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Attractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivityType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "datasets::AttractivityType type",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CultureStatusFluff",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatusMissingAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextCityStatusAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityStatus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "Research",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Needs",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeedUnlockPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "CheatItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Item Container",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageTrend",
			"IsStatic" : "false",
			"ReturnType" : "ProductAmount",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "CheatChangeWorkforceNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"increase" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CheatAddDelta",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Delta",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"delta" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Delta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered production for a delta product. Returned value is positive.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered consumption for a delta product. Returned value is negative.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the registered consumption for the give filterGuid and productGuid",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturationUncapped",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CAreaFestivalManager":
	[
		{
			"Alias" : "FestivalManager",
			"IsStatic" : "true",
			"ReturnType" : "CAreaFestivalManager",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingDurationEstimation",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Please note that this is just an estimation and therefore\nis not guaranteed to always decrease. This is due to the \nremaining time being influenced by the average island happiness",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreasePool",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerFestival",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StopFestival",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BonusAttractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuffGuids",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProtectsFromIncidents",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaFetchManager":
	[
		{
			"Alias" : "AreaFetch",
			"IsStatic" : "true",
			"ReturnType" : "CAreaFetchManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaHappinessManager":
	[
		{
			"Alias" : "Happiness",
			"IsStatic" : "true",
			"ReturnType" : "CAreaHappinessManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GlobalNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns happiness impact of the last newspaper",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact for a given populationLevel of the last newspaper",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TotalNewspaperHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total happiness impact for a given populationLevel of the last newspaper (global + population)",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PollutionHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the pollution",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenessHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the attractiveness",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WorkingConditionsHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the working conditions for the given population",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "WarfareHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of the moral during the coastal warfare, return happy if no warfare",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WarfareHappinessThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the threshold when the impact of the moral takes place",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StressedWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of workforce that are working in the given factory",
			"Arguments" :
			{
				"factoryGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HappinessImpact",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness impact of all factories of the given guid because of working conditions",
			"Arguments" :
			{
				"factoryGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AverageHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average happiness over all residences in this area",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AverageHappinessByPopulation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average happiness of a single ",
			"Arguments" :
			{
				"populationLevel" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StressFactories",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns a list with all the factories that have an impact on the happiness of the given population",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentlyRequiredAttractivenessForNeutralAttractivenessHappiness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns how much attractiveness is currently required to have a neutral happiness from attractiveness",
			"Arguments" :
			{

			}
		}
	],
	"CAreaLoader":
	[
		{
			"Alias" : "Area",
			"IsStatic" : "true",
			"ReturnType" : "CAreaLoader",
			"Comment" : "temporary hack to not have to create the arealistmanager right now",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaFromID",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentSelectedArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaManager":
	[
		{
			"Alias" : "AreaManager",
			"IsStatic" : "true",
			"ReturnType" : "CAreaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "CAreaHappinessManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Railway",
			"IsStatic" : "false",
			"ReturnType" : "CAreaRailwayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaObjects",
			"IsStatic" : "false",
			"ReturnType" : "CAreaObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaFestival",
			"IsStatic" : "false",
			"ReturnType" : "CAreaFestivalManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaPopulation",
			"IsStatic" : "false",
			"ReturnType" : "CAreaPopulationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaMoney",
			"IsStatic" : "false",
			"ReturnType" : "CAreaMoneyManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaVisitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attractivity",
			"IsStatic" : "false",
			"ReturnType" : "CAreaAttractivityManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedUnlock",
			"IsStatic" : "false",
			"ReturnType" : "CAreaNeedUnlockManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaMoneyManager":
	[
		{
			"Alias" : "VisitorIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all visitors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalMoneyIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the total balance of this island",
			"Arguments" :
			{

			}
		}
	],
	"CAreaNeedUnlockManager":
	[
		{
			"Alias" : "AreaNeedUnlock",
			"IsStatic" : "true",
			"ReturnType" : "CAreaNeedUnlockManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeedUnlockPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "HasAdditionalNeedUnlock",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "AdditionalNeedUnlockPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "AdditionalNeedUnlockAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "GlobalNeedUnlocks",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceUnlockDataEntry>",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CAreaObjectManager":
	[
		{
			"Alias" : "SaveBuildingCountSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnableObjectGroup",
			"IsStatic" : "true",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "int"
				},
				"objectGroupName" :
				{
					"Type" : "CRDString"
				},
				"setEnableObjectGroup" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ObjectLists",
			"IsStatic" : "false",
			"ReturnType" : "CFilteredObjectLists",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAreaPopulationManager":
	[
		{
			"Alias" : "AreaPopulation",
			"IsStatic" : "true",
			"ReturnType" : "CAreaPopulationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedAreaPopulationFulfilled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CPopulationAsset>",
			"Comment" : "Returns the assets for all settled population levels on this island. Skips populations with 0 residents.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HighestPopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FillAllResidencesOnIsland",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CAreaProductDeltaManager":
	[
		{
			"Alias" : "AreaProductDelta",
			"IsStatic" : "true",
			"ReturnType" : "CAreaProductDeltaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatAddDelta",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"delta" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Delta",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered production for a delta product. Returned value is positive.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the total registered consumption for a delta product. Returned value is negative.",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the registered consumption for the give filterGuid and productGuid",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "DeltaSaturationUncapped",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "Workforces",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns the assets for all workforces on this island. Skips types which provides 0 workforce.",
			"Arguments" :
			{

			}
		}
	],
	"CAreaRailwayManager":
	[
		{
			"Alias" : "Railway",
			"IsStatic" : "true",
			"ReturnType" : "CAreaRailwayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugVisualization",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RandomSkin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "if set to true the trains will use a random unlocked skin",
			"Arguments" :
			{
				"isRandom" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CAreaResidenceConsumptionManager":
	[
		{
			"Alias" : "AreaResidenceConsumption",
			"IsStatic" : "true",
			"ReturnType" : "CAreaResidenceConsumptionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDistributionPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CAreaVisitors":
	[
		{
			"Alias" : "EndInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxVisitors",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentVisitors",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VisitorIncome",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextIntervalVisitorDelta",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingIntervalTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AcceptSpecialistNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Accept",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DenySpecialistNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Deny",
			"Arguments" :
			{
				"removeNotification" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SpawnSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Spawn",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialistSpawnProbability",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CAsset":
	[
		{
			"Alias" : "AssetData",
			"IsStatic" : "true",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBlueprintManager":
	[
		{
			"Alias" : "Blueprint",
			"IsStatic" : "true",
			"ReturnType" : "CBlueprintManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCostSelectedMainBuildingOnly",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCostSelected",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCanBeBuiltSelected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildCost":
	[
		{
			"Alias" : "Empty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if every resource cost of this price is 0",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasInfluenceChanges",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this contains changes in influence tracking",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPayable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CBuildCostEntry>",
			"Comment" : "Returns the individual cost positions for this buildcost object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icons",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CRDStringW>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Names",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CRDStringW>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Values",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Payable",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<bool>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Available",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MoneyCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluencePayable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluencePayback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "if an object with this build costs get destroyed, how much influence would I get back?",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceUsageCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildCostEntry":
	[
		{
			"Alias" : "ProductGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAffordable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildModeGridDrawer":
	[
		{
			"Alias" : "IsPipeConnected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Irrigation Related Textsource",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ArePipesAboveCapacity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentlyConnectedPipes",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxConnectedPipes",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildModeManager":
	[
		{
			"Alias" : "BuildMode",
			"IsStatic" : "true",
			"ReturnType" : "CBuildModeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "Returns the cost for the current build.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildMode",
			"IsStatic" : "false",
			"ReturnType" : "CBuildModeObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentBuildMode",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasPipetteBuildings",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PipetteBuildingsCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GridDrawer",
			"IsStatic" : "false",
			"ReturnType" : "CBuildModeGridDrawer",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CBuildModeObject":
	[
		{
			"Alias" : "IsInBlueprintMode",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsSnapped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTerrainTypeValid",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOverlappingSameGUIDRadius",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMove",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNotAdjacent",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if a module should be build and it is not adjacent",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIrrigationMissing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAreaBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if a building cannot be build because the area is blocked",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsModuleLimitReached",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< true if module limit reached",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMainModule",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CCheatManager":
	[
		{
			"Alias" : "Cheat",
			"IsStatic" : "true",
			"ReturnType" : "CCheatManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreaseCheatCount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerCheat",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerCheatWithArgs",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				},
				"args" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SetCheatCategory",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GlobalCheats",
			"IsStatic" : "false",
			"ReturnType" : "CGlobalCheats",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AICheats",
			"IsStatic" : "false",
			"ReturnType" : "CAIGlobalCheatHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CCondition":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		}
	],
	"CConditionBusActivationNeedSaturation":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionDecision":
	[
		{
			"Alias" : "TakeDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"decisionOptionIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CConditionFactoryProductivity":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionGoodsInRange":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object",
			"Arguments" :
			{
				"objectIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object",
			"Arguments" :
			{
				"objectIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentDeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the delivery object of the current internal objective",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExecutionObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the execution object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		}
	],
	"CConditionGoodsInRangeBase":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionInStorage":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionIslandsWithFertility":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionItemActionCompleted":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Get the name of the item to use",
			"Arguments" :
			{

			}
		}
	],
	"CConditionItemUsed":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"CConditionManager":
	[
		{
			"Alias" : "Conditions",
			"IsStatic" : "true",
			"ReturnType" : "CConditionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RegisteredCondition",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CCondition>",
			"Comment" : "Returns a pointer to the main condition registered for a key",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "CurrentConditionAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current amount of the PlayerCounter of the Condition with the given Guid\n\\Subconditions can be accessed via the index argument",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DesiredConditionAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the desired amount of the PlayerCounter of the Condition with the given Guid\n\\Subconditions can be accessed via the index argument",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ConditionContext",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "Returns the context of the PlayerCounter of the Condition with the given Guid\n\\Subconditions can be accessed via the index argument",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ConditionQuestArea",
			"IsStatic" : "false",
			"ReturnType" : "AreaID",
			"Comment" : "",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "RegisterTriggerForCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Registers a trigger defined in ToolOne including all subtriggers based on GUID and PropertyType. Extend here for more PropertyTypes!",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CConditionModuleBuildingEfficiency":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"CConditionMoveVehicle":
	[
		{
			"Alias" : "TargetShip",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get GUID of first Vehicle",
			"Arguments" :
			{

			}
		}
	],
	"CConditionObjectSelected":
	[
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get a GUID based on the current objectGUID or any objectID",
			"Arguments" :
			{

			}
		}
	],
	"CConditionPhotographObject":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of one photograph objects",
			"Arguments" :
			{

			}
		}
	],
	"CConditionPlayerCounter":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current value of the counter.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CConditionPlayerCounterBase::GetContext",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Get amount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestBringVehicleToObject":
	[
		{
			"Alias" : "ReceiveItemsNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Gives the items to the placer and fulfills the condition",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestDestroy":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the desired amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current amount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestEscort":
	[
		{
			"Alias" : "Survivors",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of survivors needed to fulfill this quest",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentSurvivors",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the current number of survivors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EscortTarget",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of the move target object of the escort objects",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the current number of survivors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateEscortNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual escort",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestExpedition":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestFollowShip":
	[
		{
			"Alias" : "WarningCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the quest fails",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateFollowShipNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual escort",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestHitMovingTarget":
	[
		{
			"Alias" : "AddItemsToShipInRangeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemPlace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the object GUID where the start item can be obtained",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HitTarget",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the item GUID that needs to be used",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Item",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmountCurrent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that were obtained (currently either 0 or 1)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that need to be obtained (currently always 1)",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestSmuggler":
	[
		{
			"Alias" : "WarningCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the quest fails",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActivateTradingRaceQuestNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts the actual trading race",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentDeliveryObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of the current delivery object",
			"Arguments" :
			{
				"subObjectiveKey" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "CurrentDeliveryAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the Amount of the current delivery object",
			"Arguments" :
			{
				"subObjectiveKey" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "PerformItemTradeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Performs item trading at the given trading station",
			"Arguments" :
			{
				"tradingStationIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CConditionQuestStatusQuo":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get / Set context GUID",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current value of the counter.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Get amount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestSustain":
	[
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the current value of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the context of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "StatsValue",
			"Comment" : "Returns the amount of the player counter condition.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TimeLimit",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time limit of the timer condition.",
			"Arguments" :
			{

			}
		}
	],
	"CConditionQuestUseItemInArea":
	[
		{
			"Alias" : "AddItemsToShipInRangeNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemPlace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the object GUID where the start item can be obtained",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Item",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the item GUID that needs to be used",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmountCurrent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that were obtained (currently either 0 or 1)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of items that need to be obtained (currently always 1)",
			"Arguments" :
			{

			}
		}
	],
	"CConditionRecipeResearchCompleted":
	[
		{
			"Alias" : "ResearchDesiredAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CConditionRecipeResearchCompletedBase::GetResearchDesiredAmount",
			"Arguments" :
			{

			}
		}
	],
	"CConditionShipsInRange":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the guid of the current object",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExecutionObject",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the execution object",
			"Arguments" :
			{

			}
		}
	],
	"CConditionShipsInRangeBase":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IDontHaveAPurposeAndAmOnlyNeededForTextSourceInheritance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CConditionTimer":
	[
		{
			"Alias" : "TimeLimit",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "\\see CConditionTimerBase::GetTimeLimit",
			"Arguments" :
			{

			}
		}
	],
	"CConstructionArea":
	[
		{
			"Alias" : "ID",
			"IsStatic" : "false",
			"ReturnType" : "AreaID",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalShareIncome",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShareCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TakeoverCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TakeoverChance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TakeoverMinimum",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShareCooldownRemaining",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShareCooldownTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsBuyShareBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShare",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellShare",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PercentOwnedShares",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountOfShares",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OwnerProfile",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"shareIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncomePerShare",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalDebt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTakeoverBlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HostileTakeover",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReserveIslandInt",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"reservationOwner" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ClearReservation",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReservationOwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReservationCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByAnyone",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ListObjectsFromSameRecipeCount",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "KontorID",
			"IsStatic" : "false",
			"ReturnType" : "GameObjectID",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorCost",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFireUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsRiotUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIllnessUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsExplosionUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsArcticIllnesUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Fertilities",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lodes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Economy",
			"IsStatic" : "false",
			"ReturnType" : "CAreaEconomy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Visitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "this is just a helper method for accessing the AreaVisitors\nthis actually just calls the VisitorManager",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "CAreaHappinessManager",
			"Comment" : "this is just a helper method for accessing the AreaHappiness",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PassiveTrade",
			"IsStatic" : "false",
			"ReturnType" : "CPassiveTradeController",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasTradeRights",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandWarActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WarTimer",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverCurrentMorale",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverCurrentSurrenderChance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverChanceStart",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenMilitaryResultScreen",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNextWarBlocked",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryTakeoverInfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"alwaysPositive" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "MilitaryTakeoverSpareInfluenceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDuplicate",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"buildingGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CCorporationDlcUpgradeManager":
	[
		{
			"Alias" : "DlcUpgrade",
			"IsStatic" : "true",
			"ReturnType" : "CCorporationDlcUpgradeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeDifficultyChoice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeDifficultyChoice",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"choice" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeDifficultyBool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeDifficultyBool",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"selection" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CCorporationStats":
	[
		{
			"Alias" : "Counter",
			"IsStatic" : "false",
			"ReturnType" : "rdint64",
			"Comment" : "Used by the TextSources, calls GetCounter()",
			"Arguments" :
			{
				"counterValueType" :
				{
					"Type" : "int"
				},
				"playerCounter" :
				{
					"Type" : "int"
				},
				"context" :
				{
					"Type" : "int"
				},
				"counterScope" :
				{
					"Type" : "int"
				},
				"scopeContext" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Counter",
			"IsStatic" : "false",
			"ReturnType" : "rdint64",
			"Comment" : "Used by the TextSources, calls GetCounter()",
			"Arguments" :
			{
				"counterValueType" :
				{
					"Type" : "int"
				},
				"playerCounter" :
				{
					"Type" : "int"
				},
				"context" :
				{
					"Type" : "int"
				},
				"counterScope" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CDaytimeManager":
	[
		{
			"Alias" : "Daytime",
			"IsStatic" : "true",
			"ReturnType" : "CDaytimeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DaytimePreset",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newSetting" :
				{
					"Type" : "rdint16"
				}
			}
		},
		{
			"Alias" : "ToggleDaytimeAdvancing",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DaytimeSetting",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newSetting" :
				{
					"Type" : "rdint16"
				}
			}
		},
		{
			"Alias" : "Daytime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newDaytime" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "DaytimeString",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CDebugRenderManager":
	[
		{
			"Alias" : "DebugRender",
			"IsStatic" : "true",
			"ReturnType" : "CDebugRenderManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleShowQuestHint",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the m_ShowCollectables flag",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SeedRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SeedRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MainSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MainSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "LocalSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LocalSizeRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "LocalInfluenceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LocalInfluenceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ChanceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChanceRandomArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"v" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToggleHeatProviders",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleHeated",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetMemoryDebugBreakContext",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "StartSamplingContext",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "StopSamplingContext",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SetMemoryAllocationSamplingMax",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SetMemoryAllocationSamplingPeriod",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SetMemoryAllocationSamplingContext",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SetMemoryDisplayThreshold",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "SaveMemoryInfo",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CreateMemorySnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectMemorySnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ToggleMemTreeVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ToggleMemResourcesVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"str" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CDesyncRecoverFlow":
	[
		{
			"Alias" : "DesyncRecover",
			"IsStatic" : "true",
			"ReturnType" : "CDesyncRecoverFlow",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CDifficultyHelper":
	[
		{
			"Alias" : "DifficultyHelper",
			"IsStatic" : "true",
			"ReturnType" : "CDifficultyHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultySelection",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"selection" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelectionAsBool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultySelectionAsBool",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				},
				"selection" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CDiscoveryManager":
	[
		{
			"Alias" : "Discovery",
			"IsStatic" : "true",
			"ReturnType" : "CDiscoveryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShowAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Discovers the whole map for the current player",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HideAll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Hides the whole map for the current player",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShowParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Discovers a specific player",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HideParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Hides a specific player",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CEconomyManager":
	[
		{
			"Alias" : "Economy",
			"IsStatic" : "true",
			"ReturnType" : "CEconomyManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugInfo",
			"IsStatic" : "true",
			"ReturnType" : "void",
			"Comment" : "Utility",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MetaStorage",
			"IsStatic" : "false",
			"ReturnType" : "CMetaEconomy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxReachedPopulationCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Participant scope has to be set. Returns 0 for invalid populationLevelGUID",
			"Arguments" :
			{
				"populationLevelGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationLevels",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::PoolPtr<Vector<CAsset>>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaProduction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "RegisteredDeltaConsumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"filterGUID" :
				{
					"Type" : "int"
				},
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CEconomyStatisticManager":
	[
		{
			"Alias" : "EconomyStatistic",
			"IsStatic" : "true",
			"ReturnType" : "CEconomyStatisticManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugSessionGuid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugAreaGuid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "rdint16"
				}
			}
		},
		{
			"Alias" : "NumOfSelectedAreas",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductionStatistic",
			"IsStatic" : "false",
			"ReturnType" : "CProductionStatistics",
			"Comment" : "Returns the production statistic for the in the UI selected Area",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationStatistic",
			"IsStatic" : "false",
			"ReturnType" : "CPopulationStatistics",
			"Comment" : "Returns the population statistic for the in the UI selected Area",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "History",
			"IsStatic" : "false",
			"ReturnType" : "CStatisticsHistoryData",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FocussedItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CEngineMetricInfos":
	[
		{
			"Alias" : "EngineMetrics",
			"IsStatic" : "true",
			"ReturnType" : "CEngineMetricInfos",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleProperty",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"propertyID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ClearParticipantFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PropertySearch",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"search" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ResetPropertySearch",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CExpedition":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ThreatDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "description of threats",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Threats",
			"IsStatic" : "false",
			"ReturnType" : "Vector<int>",
			"Comment" : "get the threats of this expedition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionShipStarting",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true when the expedition state is starting",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionShipReturning",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true when the expedition state is returning",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "get remaining pause time until next event starts",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEventCountdown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatCurrentEvent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"eventIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatSetCurrentDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "change current decision to another",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "skip to end of expedition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentEvent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get guid of current event (or the upcoming event)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolveDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "choose a decision option",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				},
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EndExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "accept expedition result",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxStartMoralePoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartMoralePoints",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Morale",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns remaining morale relative to maximal possible morale (which depends on difficulty of expedition) [0..100]",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Morale",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "change remaining morale while expedition is already running",
			"Arguments" :
			{
				"percent" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DiscardExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "discard expedition before starting it",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionShip",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Requirement",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequirementConsumeAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Days",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenEventUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OptionAttributeSum",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OptionAttributeLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OptionAttributeLevelDescription",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TravelTimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFactoryAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FactoryAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CFactoryAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasProduction",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Production",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasConsumption",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Consumption",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsRecipeFactory",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFetchSavegameFlow":
	[
		{
			"Alias" : "SavegameFetcher",
			"IsStatic" : "true",
			"ReturnType" : "CFetchSavegameFlow",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FetchSavegameErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CFilteredObjectLists":
	[
		{
			"Alias" : "BuildingsWithGameLogicCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"withGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CFullscreenMovieQueueManager":
	[
		{
			"Alias" : "FullscreenMovieQueueManager",
			"IsStatic" : "true",
			"ReturnType" : "CFullscreenMovieQueueManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnqueueMovieGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Enqueues a new video to the queue",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGameClock":
	[
		{
			"Alias" : "CorporationTime",
			"IsStatic" : "false",
			"ReturnType" : "CorporationTime",
			"Comment" : "returns the logical time in ms since game start (sum of all game deltas)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GameClock",
			"IsStatic" : "true",
			"ReturnType" : "CGameClock",
			"Comment" : "returns the singleton instance",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAsSlowAsPossible",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "enable to run game speed as slow as possible",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Apply a multiplier to increase game-speed",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "IncreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DecreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativePauseTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time [in ms] since the pause was started. Returns 0 if no pause is active",
			"Arguments" :
			{

			}
		}
	],
	"CGameHelperClasses":
	[
		{
			"Alias" : "LocaHelper",
			"IsStatic" : "false",
			"ReturnType" : "CLocaHelper",
			"Comment" : "returns the LocaHelper object for audio language operations",
			"Arguments" :
			{

			}
		}
	],
	"CGameManager":
	[
		{
			"Alias" : "LocaHelper",
			"IsStatic" : "false",
			"ReturnType" : "CLocaHelper",
			"Comment" : "returns the LocaHelper object for audio language operations",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGameWithPopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGame",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Game",
			"IsStatic" : "true",
			"ReturnType" : "CGameManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PerformanceTimerGuid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "used to select the timer returned by GetPerformanceTimerJSON",
			"Arguments" :
			{
				"performanceTimerGUID" :
				{
					"Type" : "rdint"
				}
			}
		},
		{
			"Alias" : "SetDebugUploadSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"set" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SetDebugDownloadSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"set" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "EnableShowAssertDialog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"enableDialog" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CGameObject":
	[
		{
			"Alias" : "GameObject",
			"IsStatic" : "true",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{
				"gameObjectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "Attackable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyAttackable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attacker",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyAttacker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Module",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyBuildingModule",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BusStop",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyBusStop",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Collectable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyCollectable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CommandQueue",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyCommandQueue",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAI",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyConstructionAI",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DelayedConstruction",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDelayedConstruction",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Distribution",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDistribution",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Dying",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDying",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Dockland",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyDockland",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Electric",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyElectrifiable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Factory",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyFactory7",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FloorStack",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyFloorStackOwner",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Motor",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMotorizable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Mesh",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMesh",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Nameable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyNameable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FreeArea",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyFreeAreaProductivity",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pausable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPausable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Repair",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyRepairCrane",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Residence",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyResidence7",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "River",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyRiver",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Monument",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMonument",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pirate",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPirate",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Warehouse",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyWarehouse",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Walking",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyWalking",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentResolver",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyIncidentResolver",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceSource",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyInfluenceSource",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemContainer",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyItemContainer",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleOwner",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyModuleOwner",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Culture",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyCulture",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shipyard",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipyard",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pier",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyLoadingPier",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeRouteVehicle",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTradeRouteVehicle",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Trader",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyTrader",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemCrafter",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyItemCrafter",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VisitorHarbor",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyVisitorHarbor",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lifetime",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyLifetime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShipIncident",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipIncident",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyShipMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Sellable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertySellable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Infectable",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyIncidentInfectable",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Palace",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPalace",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PalaceMinistry",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyPalaceMinistry",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Logistic",
			"IsStatic" : "false",
			"ReturnType" : "CLogisticNode",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Watered",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyWatered",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RecipeBuilding",
			"IsStatic" : "false",
			"ReturnType" : "CPropertyRecipeBuilding",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMonument",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResidence",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsCulturalModule",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasAlternativeGrassColor",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasVariations",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of the object.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Static",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Move",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"posX" :
				{
					"Type" : "float"
				},
				"posY" :
				{
					"Type" : "float"
				},
				"posZ" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "CycleSkins",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat cycle through skins",
			"Arguments" :
			{
				"dir" :
				{
					"Type" : "int"
				},
				"trackSkinChange" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CycleSkins",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat cycle through skins",
			"Arguments" :
			{
				"dir" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ChangeSkin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Changes the skin to the new index if the skin is unlocked",
			"Arguments" :
			{
				"newSkinIndex" :
				{
					"Type" : "rduint"
				},
				"trackSkinChange" :
				{
					"Type" : "bool"
				},
				"ignoreUnlock" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ChangeSkin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Changes the skin to the new index if the skin is unlocked",
			"Arguments" :
			{
				"newSkinIndex" :
				{
					"Type" : "rduint"
				},
				"trackSkinChange" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ChangeSkin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Changes the skin to the new index if the skin is unlocked",
			"Arguments" :
			{
				"newSkinIndex" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "Upgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"unused" :
				{
					"Type" : "bool"
				},
				"mainBuildingOnly" :
				{
					"Type" : "bool"
				},
				"all" :
				{
					"Type" : "bool"
				},
				"showUpgradeCostsNotification" :
				{
					"Type" : "bool"
				},
				"playUpgradeSound" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Downgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBlueprunt",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Upgradability",
			"IsStatic" : "false",
			"ReturnType" : "CUpgradabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Downgradability",
			"IsStatic" : "false",
			"ReturnType" : "CUpgradabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FloorAddability",
			"IsStatic" : "false",
			"ReturnType" : "CUpgradabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Renovatability",
			"IsStatic" : "false",
			"ReturnType" : "CRenovatabilityChecker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOwnedByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SessionGuid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaManager",
			"IsStatic" : "false",
			"ReturnType" : "CAreaManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Expedition",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsCultureMainBuilding",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGameObjectManager":
	[
		{
			"Alias" : "Objects",
			"IsStatic" : "true",
			"ReturnType" : "CGameObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectedAreaID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"param" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns the object with the specified id or nullptr if it does not exist",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "ObjectByName",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns an object that has the given label assigned",
			"Arguments" :
			{
				"label" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "DebugObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Debug",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "DebugObjectGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"objectGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGamePlayRecorder":
	[
		{
			"Alias" : "RecordingName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Get / Set the recording name. Only works if currently not recording!",
			"Arguments" :
			{
				"recordingName" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CGameSetupManager":
	[
		{
			"Alias" : "GameSetup",
			"IsStatic" : "true",
			"ReturnType" : "CGameSetupManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultyNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"categoryID" :
				{
					"Type" : "int"
				},
				"setting" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetPlayerPossession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"peer" :
				{
					"Type" : "int"
				},
				"playerPossession" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetPlayerPossession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"peer" :
				{
					"Type" : "int"
				},
				"playerPossession" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsMultiPlayerGame",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "same as IsMultiPlayerGame, but with an additional check that the multiplayer game is really running",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsNextCampaignActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDLCActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"dlc" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsDlcCommonlyAvailable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"dlcGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets the random seed",
			"Arguments" :
			{
				"seed" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InitNewRandomSeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "chooses a new random number for the seed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SettingsFileName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "SetSettingsName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoadSettings",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "load advanced settings from file",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveSettings",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "save advanced settings to file",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetParticipantPeers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"participantIdInt" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DifficultyPreset",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGameToolOneDataHelper":
	[
		{
			"Alias" : "ToolOneDataHelper",
			"IsStatic" : "true",
			"ReturnType" : "CGameToolOneDataHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBusHotspot",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true for Busactivation Buildings if Tourism DLC is active",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnlockTriggerForAsset",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get GUID of Trigger that unlock given GUID. Returns INVALID_GUID if no Trigger found.",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CGenericPopupManager":
	[
		{
			"Alias" : "Popup",
			"IsStatic" : "true",
			"ReturnType" : "CGenericPopupManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClosePopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"buttonID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RefGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGlobalCheats":
	[
		{
			"Alias" : "IgnoreBuildingCosts",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIgnoreBuildingCosts",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IgnoreFertilities",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIgnoreFertilities",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUndiscoveredDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DisableUndiscovered",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentsDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleIncidents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SuperShipSpeedEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSuperShipSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAIEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleConstructionAIEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsStartWithConstructionAIDebuggingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartWithConstructionAIDebugging",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeferExpensiveEconomy",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDeferExpensiveEconomy",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleFluidResidentSettleBehaviour",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomySpeed",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomySpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToggleDeferExpensiveQuestSystem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsProductivityCheated",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleProductivity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsElectricityCheated",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleElectricity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAttackDebugView",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAttackDebugView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsLOSDebugView",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleLOSDebugView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleUnlockAllForHumans",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleUpgradeCheck",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsWinLoseConditionsDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DisableWinLoseConditions",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleExtendedDebugging",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"debuggingType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EnableRealWindSystem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnableHardFarms",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleMemoryTracking",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoadLivePP",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleBlockBannerNotifications",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CGUIManager":
	[
		{
			"Alias" : "GUI",
			"IsStatic" : "true",
			"ReturnType" : "CGUIManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CHappyDayEventManager":
	[
		{
			"Alias" : "HappyDayEventManager",
			"IsStatic" : "true",
			"ReturnType" : "CHappyDayEventManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TriggerHappyDay",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat Function for testing special Day messages...",
			"Arguments" :
			{
				"day" :
				{
					"Type" : "int"
				},
				"month" :
				{
					"Type" : "int"
				},
				"year" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnixTriggerHappyDay",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"timeString" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "TimeNotification",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheat Function for testing Time Notification messages...",
			"Arguments" :
			{
				"minutes" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "TimeNotification",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CHighscoreData":
	[
		{
			"Alias" : "Highscore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the total highscore, with or without the difficulty modifier",
			"Arguments" :
			{
				"includeDifficultyModifier" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "PopulationCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomicCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductionStorageCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FleetCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenessCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DifficultyFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SessionBalanceScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShipMaintenanceScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalProductionScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalStorageScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CompletedSetsScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SocketedItemsScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DiscoveredItemsScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MilitaryShipScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeShipScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AirshipScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalAttractivenessScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UrbanizationScore",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CIncidentChances":
	[
		{
			"Alias" : "TotalChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SubChances",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CIncidentChanceSourceDesc>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CIncidentChanceSourceDesc":
	[
		{
			"Alias" : "SubChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TextGuid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IconGuid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CIncidentManager":
	[
		{
			"Alias" : "Incidents",
			"IsStatic" : "true",
			"ReturnType" : "CIncidentManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"mode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugRenderMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"renderMode" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugIncidentType",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"type" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleRenderFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleSpreading",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDontSendResolver",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleUnlockIncident",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatUnlockAllIncidents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Incident",
			"IsStatic" : "false",
			"ReturnType" : "IIncident",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "IncidentID"
				}
			}
		},
		{
			"Alias" : "InfectionChanceSourceNotificationText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"typeIndex" :
				{
					"Type" : "int"
				},
				"sourceIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CInfoTipContextValue":
	[
		{
			"Alias" : "AsInt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsFloat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsBool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AsString",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CInfoTipManager":
	[
		{
			"Alias" : "InfoTip",
			"IsStatic" : "true",
			"ReturnType" : "CInfoTipManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RefGuid",
			"IsStatic" : "true",
			"ReturnType" : "int",
			"Comment" : "Returns the last valid Reference Guid of a widget. The reference guid still exists after the mouse leaves this widget.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetRefGuid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RefOid",
			"IsStatic" : "true",
			"ReturnType" : "GameObjectID",
			"Comment" : "Returns the last valid Reference Object ID of a widget. The reference guid still exists after the mouse leaves this widget.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetRefOid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "IsRefOidSet",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheckInfoTipSource",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"sceneName" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "ContextValue",
			"IsStatic" : "false",
			"ReturnType" : "CInfoTipContextValue",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "IsContextValueSet",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "IsContextEmpty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CInputManager":
	[
		{
			"Alias" : "Input",
			"IsStatic" : "true",
			"ReturnType" : "CInputManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugModeEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Debug",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugModeEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CIrrigationManager":
	[
		{
			"Alias" : "Irrigation",
			"IsStatic" : "true",
			"ReturnType" : "CIrrigationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugReInitGrids",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CItemAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CItemAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Allocation",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllocationTextGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemOrBuffEffectTargetsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalOutputAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputCycle",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalOutputForceProductSameAsFactoryOutput",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalOutputProductsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputAmountUpgradeCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputAmountUpgradeAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputAmountUpgradeProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplaceInputOldInput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplaceInputOldInputsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceInputNewInput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReplaceInputNewInputsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceInputCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialistSpawnProbabilityIfPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OverrideSpecialistPool",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitModifierCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitModifierProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalSupply",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalHappiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalHeat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalMoney",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InputBenefitModifierAdditionalResearch",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnySupply",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyHappiness",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyHeat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyMoney",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInputBenefitModifierProvidingAnyResearch",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalSupplyFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalHappinessFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalHeatFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionalMoneyFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InputBenefitAllAdditionaResearchFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodConsumptionCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodConsumptionProvidedNeed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAmountInPercent",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAmountProvidedInPercent",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GoodConsumptionAllProvidedNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasMultipleSameGoodConsumption",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PirateFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WhiteFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProjectileInnerDamage",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProjectileOuterDamageRadius",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UsedProjectile",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedProvidesNeedCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllProvidedNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllSubstituteNeedsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAssemblyOptionsCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddAssemblyOptionsFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceAssemblyOptionsCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplaceAssemblyOptionsNewFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReplacingWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodGenerationProbability",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodGenerationPoolFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BlockBuyingShares",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BlockHostileTakeover",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessIgnoresMorale",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnablesSelfHealDuringCombat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitDecreaseRateInPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverUnitMovementSpeedInPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialUnitHappinessThresholdUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddedFertility",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsItemActionNuke",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsItemActionKamikaze",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AreaTolerance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUsingMoraleDamageEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUsingHitpointDamageEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemSetUpgradeCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemSetUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "CTextSourceListValue",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemSetUpgradesFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasDivingRarityUpgrades",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Diving rarity upgrade",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DivingRarityUpgradesFormatted",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandStorageIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandWorkforceIncreaseCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandWorkforceIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AdditionalInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalInfluencePerModule",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalAttractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalAttractivenessPerSet",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalMonumentRewardAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalSlotAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalServiceRange",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ElectricityBoostIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WorforceDecrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PierLoadingSpeedIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsGlobalBuffTimed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GlobalBuffCountdown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFluffItem",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectTargetCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectTarget",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CItemSessionManager":
	[
		{
			"Alias" : "Item",
			"IsStatic" : "true",
			"ReturnType" : "CItemSessionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuffFluff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatAllItems",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DraggedItemGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CLoadingPierManager":
	[
		{
			"Alias" : "LoadingPier",
			"IsStatic" : "true",
			"ReturnType" : "CLoadingPierManager",
			"Comment" : "we want GetManagerMutable inline and TextSourceParser does not support it yet to define it here, so its defined below in this .h",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugDrawing",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"draw" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UpdateHarborQueuePointsDebug",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"pathPlannerLayer" :
				{
					"Type" : "int"
				},
				"coastlineID" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"CLocaHelper":
	[
		{
			"Alias" : "SelectProfile",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"profileGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CLogisticNode":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMemorizeManager":
	[
		{
			"Alias" : "Memorize",
			"IsStatic" : "true",
			"ReturnType" : "CMemorizeManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaEconomy":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageCapacity",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReservedStorageAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeSpace",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableTransporterCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"transporterType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmount",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				},
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "AddAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "See CLogisticNode::CheatAddStorageAmountAll",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "ResearchPerMinute",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Research",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResearchPerPopulation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NextResearchCapIncrease",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NextResearchCapIncreaseRequirement",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameLoader":
	[
		{
			"Alias" : "SaveGameWithPopup",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SaveGame",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameManager":
	[
		{
			"Alias" : "ActiveSessionGUIDOfPeerInt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"peer" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MetaGameManager",
			"IsStatic" : "true",
			"ReturnType" : "CMetaGameManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameObject":
	[
		{
			"Alias" : "Profile",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyProfile",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Diplomacy",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyDiplomacy",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionAI2",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyConstructionAI",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProfileCounter",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyProfileCounter",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorOwner",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyKontorOwner",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyShares",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyBuyShares",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Highscore",
			"IsStatic" : "false",
			"ReturnType" : "CMetaPropertyHighscore",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the GUID of the object.",
			"Arguments" :
			{

			}
		}
	],
	"CMetaGameObjectManager":
	[
		{
			"Alias" : "MetaObjects",
			"IsStatic" : "true",
			"ReturnType" : "CMetaGameObjectManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SessionGameObject",
			"IsStatic" : "false",
			"ReturnType" : "CSessionScopedPointer<CGameObject>",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "this method returns an object with the given objectID\nthis should not be used ingame it\'s mainly intended for \ntextsources as the strict typedef is problematic there",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "CheatLookAtObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"gameObjectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "LookAtObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionObjectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "CheatLookAtPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGUID" :
				{
					"Type" : "int"
				},
				"x" :
				{
					"Type" : "float"
				},
				"y" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CMetaIncidentManager":
	[
		{
			"Alias" : "MetaIncidents",
			"IsStatic" : "true",
			"ReturnType" : "CMetaIncidentManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaMoneyManager":
	[
		{
			"Alias" : "Money",
			"IsStatic" : "true",
			"ReturnType" : "CMetaMoneyManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TotalIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the total income per minute (balance)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of the given population level over all islands",
			"Arguments" :
			{
				"populationGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NewspaperIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of the newspaper (income effects)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VisitorIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all visitors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShareLoosings",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the money per minute that is gained/lost by shares that are lost on owned islands",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShareIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the money per minute that is gained by shares in foreign islands",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaintenanceIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the summed balance of all maintenance buildings (without skyscrapers)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SkyscraperMaintenanceIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all skyscrapers",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoyalTaxesIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of the royal taxes (metropolis factor)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TradeShipIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all trade ships",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WarShipIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all war ships",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CharterShipIncome",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the balance of all charter ships",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyBuildPermits":
	[
		{
			"Alias" : "BuildPermits",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyBuildPermits",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildPermits",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeedsBuildPermit",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatAddBuildingPermits",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyBuyShares":
	[
		{
			"Alias" : "CalcPrio",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyConstructionAI":
	[
		{
			"Alias" : "MetaShipHandler",
			"IsStatic" : "false",
			"ReturnType" : "CAIMetaShipHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEnterNextSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEnterSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyDiplomacy":
	[
		{
			"Alias" : "War",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"otherParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Alliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"otherParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SendSmallGift",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"targetParticipantIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CMetaPropertyExpeditionUser":
	[
		{
			"Alias" : "Expedition",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyExpeditionUser",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearLabyrinth",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddLabyrinthRoom",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemoveLabyrinthRoom",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddLabyrinthConnection",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateLabyrinth",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateLabyrinthMinLayers",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"layers" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthMaxLayers",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"layers" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthSizeX",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"size" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthSizeY",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"size" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthMaxRoomSize",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"size" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthMinRoomAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GenerateLabyrinthMaxRoomAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ByGUID",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "player gained access to an expedition (e.g. unlock or received an expedition item)",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"add" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AddExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "player gained access to an expedition (e.g. unlock or received an expedition item)",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DistributeExpedition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"progressLevel" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DiscardExpeditionConditional",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "netsafe function which either discards the given expedition or asks the user if he really wants to discard depending on expedition state",
			"Arguments" :
			{
				"expeditionGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DiscardExpeditionDirectly",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "netsafe function which discards the given expedition without any further questions",
			"Arguments" :
			{
				"expeditionGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionByShip",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "returns the expedition this ship is assigned to",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "CheatSetCurrentDecision",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Tracker",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Overview",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Event",
			"IsStatic" : "false",
			"ReturnType" : "CExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FeedOptionMoraleCostFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndExpeditions",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "skip to end of expedition",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyHighscore":
	[
		{
			"Alias" : "HighscorePoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the current highscore in points",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HighscoreData",
			"IsStatic" : "false",
			"ReturnType" : "CHighscoreData",
			"Comment" : "returns the current highscore data",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyInfluence":
	[
		{
			"Alias" : "MetaInfluence",
			"IsStatic" : "true",
			"ReturnType" : "CMetaPropertyInfluence",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PreviewForDifficulty",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PreviewDifferenceForDifficulty",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SpentInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UsedPoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InfluenceGainOnNextLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SpentInfluencePerCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreePoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeProgress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeRemainingInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FreeTotalInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"influenceUsage" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MinInfluenceNeededToReachBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"buffGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CategoryOfBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"buffGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CharterInfluencePayback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidenceInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProfileLevelInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CultureInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EngineerInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyKontorOwner":
	[
		{
			"Alias" : "ImperialKontor",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "KontorSwitchCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsKontorSwitchCooldownFinished",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyProfile":
	[
		{
			"Alias" : "CompanyName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvatarPortraitIcon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvatarPortrait",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CompanyLogoGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetAndApplyCompanyColor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheats",
			"Arguments" :
			{
				"newColorInt" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetAndApplyCompanyLogo",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newLogoGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetAvatarPortrait",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newPortraitGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetCompanyName",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newName" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "Level",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Level",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IncreaseLevel",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationRequirementForCompanyLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationRequirementForNextLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMetaPropertyProfileCounter":
	[
		{
			"Alias" : "Stats",
			"IsStatic" : "false",
			"ReturnType" : "CCorporationStats",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CMilitaryManager":
	[
		{
			"Alias" : "Military",
			"IsStatic" : "true",
			"ReturnType" : "CMilitaryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugDraw",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaper":
	[
		{
			"Alias" : "Article",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperArticle",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Volume",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the volume of this newspaper. The very first newspaper starts at volume 1",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPublished",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this newspaper was already published",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPartOfNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given article is part of the newspaper if it would be published now",
			"Arguments" :
			{
				"articleID" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "EditTimer",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time the user has to edit the last newspaper",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperArticle":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperContext",
			"Comment" : "Returns the game context for this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Headline",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the TextGUID of the Headline based on the state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Subline",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the TextGUID of the Subline based on the state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Image",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the path to the image based on the position and state of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfluenceCosts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the influence costs that has to be paid to replace a gameplay article by this article. Only valid for propaganda articles, otherwise 0",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Effects",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CNewspaperEffectDesc>",
			"Comment" : "Returns all effects that will be triggered by this article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the guid of this article is unlocked in the unlockmanager",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ArticleName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name (category or description like \'War propaganda\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a propaganda article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFiller",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a filler article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsGameplay",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the type of this article is a gameplay article",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAnarchy",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this article is an anarchy article (T1 Flag to trigger specific quests and pamsy reactions)",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperContext":
	[
		{
			"Alias" : "ParticipantName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TownName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ObjectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Owner",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OwnerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperEffectDesc":
	[
		{
			"Alias" : "EffectValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the value of an effect. The affected system is responsible for the interpretation of this value",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectValueAsConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the value of an effect interpreted as construction time (see T1: ProductionTimeToConstructionTimeMultiplier). Only the war preparation effect will return a meaningful value here",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the effect (category or description like \'Satisfaction effect\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectCategoryName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the effect category (category or description like \'War Preparation\')",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectValueText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the value of the effect as a text e.g. \'+10%\'",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the description of the effect as flufftext",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EffectIcon",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "Returns the icon of the effect. This depends on the type and the effect value",
			"Arguments" :
			{

			}
		}
	],
	"CNewspaperManager":
	[
		{
			"Alias" : "Newspaper",
			"IsStatic" : "true",
			"ReturnType" : "CNewspaperManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddNewsArticle",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"articleGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CreateNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaper",
			"Comment" : "Returns the newspaper with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "FindArticle",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperArticle",
			"Comment" : "Returns the article with the given ID for the current participant",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "IsPartOfNewspaper",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true of the given article id is used in any newspaper of the current participant",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "ShowLatestNewspaperUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Opens the newspaper UI for the latest newspaper of the current participant",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Publish",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "NewspaperID"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				},
				"contextGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValuePropagandaSensitive",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				},
				"triggeredByPropaganda" :
				{
					"Type" : "bool"
				},
				"contextGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValuePropagandaSensitive",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				},
				"triggeredByPropaganda" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ActiveEffectValueText",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveEffectName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"effectType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RiotImpactByPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the riot increase for the given population based on the current newspaper effects. Please set correct participant and session scope",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HappinessImpactByPropaganda",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the happiness increase for the given population based on the current newspaper effects. Please set correct participant and session scope",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SpecialEditionContext",
			"IsStatic" : "false",
			"ReturnType" : "CNewspaperContext",
			"Comment" : "Gets/Sets context information for the special edition of the current participant",
			"Arguments" :
			{

			}
		}
	],
	"CNotificationManager":
	[
		{
			"Alias" : "Notifications",
			"IsStatic" : "true",
			"ReturnType" : "CNotificationManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "INotification",
			"Comment" : "Returns the next active notification of the specified type",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ByID",
			"IsStatic" : "false",
			"ReturnType" : "INotification",
			"Comment" : "Returns the notification with the given ID\nNote that this can return nullptr, especially if the notification you are trying to access is already deleted (e.g. by being filtered out by the player)",
			"Arguments" :
			{
				"notificationID" :
				{
					"Type" : "NotificationID"
				}
			}
		},
		{
			"Alias" : "PlayTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"seconds" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CNotificationTypeCharacter":
	[
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "CTextSourceObjectWrapper",
			"Comment" : "",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "CharacterGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets / Sets the character GUID",
			"Arguments" :
			{

			}
		}
	],
	"CNotRenovatableContext":
	[
		{
			"Alias" : "Locked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionProximity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaterialMissing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CNotUpgradableContext":
	[
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountInt",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountFloat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNoUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionProximity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TargetLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfactionInsufficient",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationInsufficient",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaterialMissing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CityUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COMOffer":
	[
		{
			"Alias" : "Currency01Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COMTradeActive":
	[
		{
			"Alias" : "CanBuy",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency01Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Asset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"feeFactor" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "Currency02Costs",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFriendOffer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"isFriend" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "GoodOfferGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AccountId",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COMTradeBought":
	[
		{
			"Alias" : "GoodOfferGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineEventManager":
	[
		{
			"Alias" : "OnlineEvents",
			"IsStatic" : "true",
			"ReturnType" : "COnlineEventManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestHandler",
			"IsStatic" : "false",
			"ReturnType" : "COnlineEventQuestHandler",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventProgress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TryClaimPhaseReward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"phaseIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"COnlineEventQuestHandler":
	[
		{
			"Alias" : "ResetDailyQuests",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetPhaseQuest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineInventoryManager":
	[
		{
			"Alias" : "OnlineInventory",
			"IsStatic" : "true",
			"ReturnType" : "COnlineInventoryManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateOnlineEventItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastOpenedChestItemGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COnlineManager":
	[
		{
			"Alias" : "Online",
			"IsStatic" : "true",
			"ReturnType" : "COnlineManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastUplayErrorMessage",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InternetErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MatchMakingErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OnlineMarketAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RendezVousErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RendezVousErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UbiservicesErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UplayErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StormErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RoutingErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchAvailability",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchErrorText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PunchErrorCode",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastError",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastLeftPlayer",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LastInviter",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlayerName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PlayerColor",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PlayerTeam",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NATType",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AnimatedEllipsis",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Ping",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VoiceChat",
			"IsStatic" : "false",
			"ReturnType" : "CVoiceChat",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Username",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "returns the uplay account name for any peer (as an int because text sources)",
			"Arguments" :
			{
				"peerID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FormerUsername",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "returns the uplay account name for any peer (as an int because text sources)",
			"Arguments" :
			{
				"peerID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelJoin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "tries to join a given session",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoadMPSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "start multiplayer with current settings (calls StartMultiplayerSession(const CMPGameSettings& settings))",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AcceptInvite",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeclineInvite",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetCoopPeersAtMarker",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "returns the peers looking at the same UI page with the same custom value.",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "int"
				},
				"customValue" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"COnlineMarketManager":
	[
		{
			"Alias" : "OnlineMarket",
			"IsStatic" : "true",
			"ReturnType" : "COnlineMarketManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TryBuyItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PollOnlineMarketPrice",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Polls an updated list of all item prices",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PollTradeListStatus",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Polls the current status of all open offer",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PushOffer",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Network - Push\n",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAvailability",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reroll",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"COptionsManager":
	[
		{
			"Alias" : "Options",
			"IsStatic" : "true",
			"ReturnType" : "COptionsManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShortcutInUse",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CommandInUse",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OptionsConfirmPopupTime",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAsianLanguageInUse",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the text language which is currently set an Asian language",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleFullscreen",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "toggles between window mode and fullscreen mode",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Resolution",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Resolution",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "WindowMode",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WindowMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DirectX",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DirectX",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GraphicAdapter",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GraphicAdapter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GraphicsQuality",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GraphicsQuality",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Gamma",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Gamma",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "VSync",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VSync",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AntiAlias",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AntiAlias",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Texture",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Texture",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Shader",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shader",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Lighting",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Lighting",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Shadow",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Shadow",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Water",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Water",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Posteffects",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Posteffects",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ViewDistance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ViewDistance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Terrain",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Terrain",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FixSunPosition",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FixSunPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Feedback",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Feedback",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Upscaling",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Upscaling",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MasterVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MasterVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "UIVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UIVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MusicVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MusicVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "VoiceVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VoiceVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SFXVolume",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SFXVolume",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "TextLanguage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TextLanguage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AudioLanguage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AudioLanguage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SubtitleBackgroundOpacity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SubtitleBackgroundOpacity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "LargeSubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LargeSubtitlesEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "RightclickMenuEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RightclickMenuEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "FreeCameraEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FreeCameraEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ExtendedCameraDistanceEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExtendedCameraDistanceEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CameraDragSensitivityDisplayValue",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraDragSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraDragSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "CameraScrollSensitivityDisplayValue",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraScrollSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraScrollSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "CameraKeyboardSensitivityDisplayValue",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraKeyboardSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CameraKeyboardSensitivity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "BuildGridEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildGridEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "InfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoSaveInterval",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeInfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeInfolayerEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ConstructionHighlightEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionHighlightEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AutoBlueprintEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AutoBlueprintEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TutorialEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "EdgeScrollingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EdgeScrollingEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "TransparentChatEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TransparentChatEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ExpeditionFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExpeditionFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "NewspaperFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "DiplomacyFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DiplomacyFilterEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CoopPingBubbleEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CoopPingBubbleEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "EnableElectricityPoles",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnableElectricityPoles",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "IrrigationPlacementModeEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IrrigationPlacementModeEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "VisitorAutoAcceptEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "VisitorAutoAcceptEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "RomanLettersOnlyEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RomanLettersOnlyEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SansSerifOnlyEnabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SansSerifOnlyEnabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AlternativeGrassColorMode",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AlternativeGrassColorMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ForceAlternativeGrassColorMode",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentMusicDisabled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncidentMusicDisabled",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"disabled" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"COverlayDebugPalace":
	[
		{
			"Alias" : "AddHighlight",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemoveHighlight",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleSubtleOutline",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPalaceDecreeAsset":
	[
		{
			"Alias" : "PalaceDecreeData",
			"IsStatic" : "true",
			"ReturnType" : "CPalaceDecreeAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsLockedByMonumentEventForSelectedObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RequiredAttractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CParticipantManager":
	[
		{
			"Alias" : "Participants",
			"IsStatic" : "true",
			"ReturnType" : "CParticipantManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Participant",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GetCurrentParticipantID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets the participant that is currently controlled.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Current",
			"IsStatic" : "false",
			"ReturnType" : "CMetaGameObject",
			"Comment" : "Returns the current participant. May be overridden by cheats.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ParticipantName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantLogo",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatCreateParticipant_IfNecessary",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetCurrentParticipantFromSelection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatLetSelectedAIEnterNewSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemoveParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CloseBorders",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "close or open border between 2 players, this feature currently has no design\n\\param\tparticipantIDOne\tfirst player\n\\param\tparticipantIDTwo\tsecond player\n\\param\tclose\t\t\t\ttrue = close, false = open",
			"Arguments" :
			{
				"participantIDOne" :
				{
					"Type" : "int"
				},
				"participantIDTwo" :
				{
					"Type" : "int"
				},
				"close" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "CheatTotalWar",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "execute a cheat to have war between everyone",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatTotalTrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "execute a cheat to have trade contract between everyone",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatTotalAlliances",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "execute a cheat to have alliance contract between everyone",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatAlliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "cheat alliance to a single player, an object needs to be selected if this player",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatDiplomacyTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "cheat to make time pass for the diplomacy system, defaults to a 15 minute time jump",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "open a diplomacy counter proposal to a negotiation\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AcceptCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "accept a diplomacy counter proposal\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation\n\\param\tproposalId\t\tid of the proposal",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				},
				"proposalId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanAcceptCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "can a diplomacy counter proposal be accepted?\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IgnoreCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "ignore a diplomacy counter proposal\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation\n\\param\tproposalId\t\tid of the proposal",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				},
				"proposalId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanIgnoreCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "can a diplomacy counter proposal be ignored?\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsCounterProposal",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a diplomacy counter proposal in progress\n\\param\tinitialOfferId\twho offered a negotiation\n\\param\tcountererId\t\twho makes a counter offer to the negotiation\n\\param\tproposalId\t\tid of the proposal",
			"Arguments" :
			{
				"initialOfferId" :
				{
					"Type" : "int"
				},
				"countererId" :
				{
					"Type" : "int"
				},
				"proposalId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DeclareWar",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "declare a war treaty\n\\param\tsourceId\t\tsource player if the war treaty\n\\param\ttargetId\t\ttarget player if the war treaty",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelAlliance",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "cancel an alliance treaty\n\\param\tsourceId\t\tsource player if the alliance treaty\n\\param\ttargetId\t\ttarget player if the alliance treaty",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelDoubleProtection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "cancel protection treaties from a three way alliance\n\\param\tsourceId\t\tsource player if the alliance treaty\n\\param\ttargetId1\t\tfirst target player if the alliance treaty\n\\param\ttargetId1\t\tsecond target player if the alliance treaty",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"targetId1" :
				{
					"Type" : "int"
				},
				"targetId2" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DoesNeedWar",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "check if current combination of diplomacy states requires war declarations\n\\param\tsourceId\t\tsource player of war declaration\n\\param\tprotectedId\t\tthe player protected by source player\n\\param\tneedsWarId\t\ttarget player of war declaration",
			"Arguments" :
			{
				"sourceId" :
				{
					"Type" : "int"
				},
				"protectedId" :
				{
					"Type" : "int"
				},
				"needsWarId" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantReputation",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get the reputation of an NPC toward the current player\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParticipantReputationTo",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get the reputation of one NPC toward another player\n\\param\tparticipant\t\tid of NPC player\n\\param\tTarget\t\t\tid of target player of NPCs reputation number",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "PeaceSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance to sucessfully get peace with an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TradeRightsSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance to sucessfully get trade rights with an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SupportFleetSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully getting a support fleet from an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AllianceSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance to sucessfully get alliance with an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FlatterSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully flattering an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InsultSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully insulting an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftSmallSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully giving a small gift to an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftSmallSize",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "calculate the size of a small gift to an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftOrdinarySuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully giving an ordinary gift to an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GiftGenerousSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully giving a large gift to an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CeasefireSuccess",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully getting a cease fire treaty with an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NonAttack",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "calculate the chance for sucessfully getting a non attack treaty with an NPC\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestPeaceDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a debuff active when requesting peace with an NPC?\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestTradeRightsDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a debuff active when requesting trade rights with an NPC?\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestAllianceDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a debuff active when requesting alliance with an NPC?\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestCeaseFireDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a debuff active when requesting cease fire with an NPC?\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequestNonAttackDebuffActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "is there a debuff active when requesting non attack treaty with an NPC?\n\\param\tparticipant\t\tid of NPC player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NonAttackDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< returns default non attack treaty duration",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CeaseFireDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< returns default cease fire treaty duration",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingNonAttackDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the non attack pact with the given participant is going to last (0 if none)\n\\param\tparticipant\t\tid of player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingNonAttackDurationTo",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the non attack pact of a participant towards a target is going to last (0 if none)\n\\param\tparticipant\t\tid of player\n\\param\tTarget\t\t\tid of target player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "RemainingCeaseFireDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the cease fire pact with the given participant is going to last (0 if none)\n\\param\tparticipant\t\tid of player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingCeaseFireDurationTo",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "< Returns how long the cease fire pact of a participant towards a target is going to last (0 if none)\n\\param\tparticipant\t\tid of player\n\\param\tTarget\t\t\tid of target player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "CheckDiplomacyState",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true if the current participant and the given participant have the given diplomacyState\n\\param\tparticipant\t\tid of player\n\\param\tdiplomacyState\tid of diplomacyState",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"diplomacyState" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheckDiplomacyStateTo",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true if a participant has the given diplomacyState towards a target\n\\param\tparticipant\t\tid of player\n\\param\tTarget\t\t\tid of target player\n\\param\tdiplomacyState\tid of diplomacyState",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				},
				"diplomacyState" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TopLevelDiplomacyState",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "< Returns Alliance, Trade Rights, Peace, or War (or invalid) state between the current participant and the given participant\n\\param\tparticipant\t\tid of player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TopLevelDiplomacyStateTo",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "< Returns Alliance, Trade Rights, Peace, or War (or invalid) state between a player and a target\n\\param\tparticipant\t\tid of player\n\\param\tTarget\t\t\tid of target player",
			"Arguments" :
			{
				"participant" :
				{
					"Type" : "int"
				},
				"Target" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "DiplomacyBaseUserIsCurrent",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "< Returns true, if in diplomacymenu the perspective of current participant is shown",
			"Arguments" :
			{

			}
		}
	],
	"CPassiveTradeController":
	[
		{
			"Alias" : "BuyPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the global price when passive trader buys items or goods",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the global price when passive trader sells items or goods.If shipID is given, price reducing items will be considered",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the global price when passive trader sells items or goods.If shipID is given, price reducing items will be considered",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Offer",
			"IsStatic" : "false",
			"ReturnType" : "CPassiveTradeOffer",
			"Comment" : "Returns the passive trade offer for the good with the given id",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Offers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CPassiveTradeOffer>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasOffer",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if for the given guid a offer exists",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuyOffers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTradeOfferInfo>",
			"Comment" : "Fills the given vector with all goods this trader buys currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SellOffers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTradeOfferInfo>",
			"Comment" : "Fills the given vector with all goods this trader sells currently. If a shipID is given, item (specialists) for price reduction will be considered",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "SellOffers",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTradeOfferInfo>",
			"Comment" : "Fills the given vector with all goods this trader sells currently. If a shipID is given, item (specialists) for price reduction will be considered",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MinimumStock",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the configured minimum stock for the given product. 0 if there is nothing configured",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPassiveTradeOffer":
	[
		{
			"Alias" : "IsSellOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBuyOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBuyOrSell",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPreferedGood",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPathManager":
	[
		{
			"Alias" : "Path",
			"IsStatic" : "true",
			"ReturnType" : "CPathManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugCommand",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"command" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"option" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugLayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"layer" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetQuickBalanceParam",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"paramIndex" :
				{
					"Type" : "int"
				},
				"paramValue" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CPauseManager":
	[
		{
			"Alias" : "Pause",
			"IsStatic" : "true",
			"ReturnType" : "CPauseManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Toggle",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IncreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DecreaseGameSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Paused",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PausedInMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Continued",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Played",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FastForward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TripleFastForward",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Slowdown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPlatformDispatchManager":
	[
		{
			"Alias" : "PlatformDispatch",
			"IsStatic" : "true",
			"ReturnType" : "CPlatformDispatchManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnlockAssetCheat",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Unlocks the asset and all configured uplay products. Only enabled when cheats are active",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPopulationAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Workforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPopulationStatistics":
	[
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the happiness of the given population",
			"Arguments" :
			{
				"populationGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CProductAmount":
	[
		{
			"Alias" : "Product",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CProductAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CProductAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAbstract",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsDeltaOnly",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsValid",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Has to be filled by code. Not filled when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AvailableAmount",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Has to be filled by code. Not filled when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Available",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Invalid when static accessed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllowedInCurrentRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this product is associated with the current region",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllowedInRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the product is associated with the given region (based on the AssociatedRegions config in T1)",
			"Arguments" :
			{
				"regionIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProducingRegions",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "Returns a list of region guid in which the product can be produced (based on ProductionRegions config in T1)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanBeProducedInCurrentRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns if a good can be produced in the current region",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DoesBusNeedCheckAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true for bus needs with an attractivity check",
			"Arguments" :
			{

			}
		}
	],
	"CProductionStatistics":
	[
		{
			"Alias" : "ProductGeneration",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product generation per minute for the given product",
			"Arguments" :
			{
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductConsumption",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product consumption per minute for the given product",
			"Arguments" :
			{
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductDelta",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product delta (production - consumption) per minute for the given product",
			"Arguments" :
			{
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PerfectProductGeneration",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the potential product generation per minute for the given product",
			"Arguments" :
			{
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PerfectProductConsumption",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the potential product consumption per minute for the given product",
			"Arguments" :
			{
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyAttackable":
	[
		{
			"Alias" : "MaxHitPoints",
			"IsStatic" : "false",
			"ReturnType" : "short",
			"Comment" : "Returns the maximum hit points. More lightweight than the method above.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurHitPoints",
			"IsStatic" : "false",
			"ReturnType" : "short",
			"Comment" : "Returns the current amount of hit points",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddDamagePercent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds percental damage",
			"Arguments" :
			{
				"damagePercent" :
				{
					"Type" : "float"
				},
				"damageDealerOwner" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddDamagePercent",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds percental heal",
			"Arguments" :
			{
				"healPercent" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetDebugInvincible",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Object won\'t take damage from attacks anymore",
			"Arguments" :
			{
				"invincible" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "IsWhiteFlagActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this unit is currently using the white flag active item",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsUnderAttack",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyAttacker":
	[
		{
			"Alias" : "BaseDamage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Damage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReloadTime",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperFireRateIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns fire rate increase by newspaper effects, e.g. 0.2 for +20%.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DPS",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyBuilding":
	[
		{
			"Alias" : "HasUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true, if this building has an upgrade target",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyBuildingModule":
	[
		{
			"Alias" : "IsCulturalModule",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyBusStop":
	[
		{
			"Alias" : "BusNeedDistanceSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the need saturation without including the current productivity of supplier",
			"Arguments" :
			{
				"need" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsBusNeedSatisfactionReduced",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if need saturation is reduced by attractiveness/productivity",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeedSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the need saturation including productivity and distance of supplier",
			"Arguments" :
			{
				"need" :
				{
					"Type" : "ProductGUID"
				}
			}
		}
	],
	"CPropertyCollectable":
	[
		{
			"Alias" : "CanBeCollected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Tells if the object can be collected currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTargetStorageFull",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTargetStoragePartiallyFull",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetGoodsAddedToStorage",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanBeDropped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Tells if the object can be dropped currently",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CollectAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get / Set the collected count, i.e. the number of times that this object has to be collected",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyCommandQueue":
	[
		{
			"Alias" : "HasPatrolAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasExpeditionAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasTradeRouteAssignment",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsNonMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsInCombat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsChosenOrOutOnExpedition",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsHoldingQuestObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsPatrolling",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsLeavingTheSession",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsInATradeRoute",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UI_IsEscorting",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyConstructionAI":
	[
		{
			"Alias" : "GrantSettlePermissionNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"accepted" :
				{
					"Type" : "bool"
				},
				"settleMissionId" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"CPropertyCulture":
	[
		{
			"Alias" : "Attractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenessModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenessIncludingModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "< Do not use these for gamelogic. Modules with attractiveness will register themselves at the AttractivenessManager",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyDelayedConstruction":
	[
		{
			"Alias" : "RemainingConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatReady",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyDistribution":
	[
		{
			"Alias" : "DistributionAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyDockland":
	[
		{
			"Alias" : "LoadingSpeedBoost",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the loading speed boost percentage to be shown in UI",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleStorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the bonus storage granted by storage modules",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyDying":
	[
		{
			"Alias" : "PropertyID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CTickableGameObjectProperty::GetPropertyID()",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyElectrifiable":
	[
		{
			"Alias" : "IsElectrified",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BoostFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyFactory7":
	[
		{
			"Alias" : "FillStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativeCycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average productivity which is the smoothed productivity over time",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentProductivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the current productivity in this very moment. This is not an average value. For the average value which is used in the UI use GetProductivity",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgradeList",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CItemAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBase",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBoostPotential",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityFarmFieldBoost",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by all newspaper effects, e.g. 0.2 for +20%",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByArmamentEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the warpreparation/armament newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByProductivityEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the productivity newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Inputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "returns the actual current inputs (affected by items)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FullOutputStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoWarehouseInRange",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is not a single connection to a warehouse the range of this factory",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsAFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCheatFertility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyFloorStackOwner":
	[
		{
			"Alias" : "ChangeFloorSize",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "change the size of one floor element, normally sizeDiff is -1 or +1. Only allows changes that does not need to update the lower floors",
			"Arguments" :
			{
				"floorIndex" :
				{
					"Type" : "int"
				},
				"sizeDiff" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyFreeAreaProductivity":
	[
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatReady",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingInitializeForestTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleGridDebugDraw",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyIncidentInfectable":
	[
		{
			"Alias" : "IsGettingHealed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResetProtection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentTypeIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsInfected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FireInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RiotInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IllnessInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExplosionInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ArcticIllnessInfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "CIncidentChances",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyIncidentResolver":
	[
		{
			"Alias" : "IsSpecialActionActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverStates",
			"IsStatic" : "false",
			"ReturnType" : "Vector<IncidentResolverState>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialResolverStates",
			"IsStatic" : "false",
			"ReturnType" : "Vector<IncidentResolverState>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanSendSpecialForces",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearSpecialActionCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SpecialUnitAsset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StandardUnitAsset",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Actually you can\'t get the infection chance for a city institution\nas it might resolve different incident types, therefore a overall\nchance doesn\'t make sense right now but as the UI is not adapted to\nCity Institutions with multiple incident types we just use this \nmethod which just returns the chance for any incident type.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChanceFire",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChanceRiot",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChanceIllness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfectionChanceArcticIllness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionAdditionalUnitAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionMaxAdditionalUnitAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResolverPopulationThreshold",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"resolverIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResolverHappinessThreshold",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"resolverIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActionNewspaperHappinessBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ActionUpgradeHappinessBonus",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsFireInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsRiotInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIllnessInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsArcticIllnessInstitution",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIncidentNearby",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsActionOnCooldown",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DoesAnybodyNearbyNeedHelp",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Note: this is not cheap",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPotentialAvailableSpecialUnitIndex",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "this returns true if the index of the special unit given as parameter is in a valid range ",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyInfluenceSource":
	[
		{
			"Alias" : "ProvidedInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyItemContainer":
	[
		{
			"Alias" : "CheatItemInSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ClearSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EquipSlot",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				},
				"targetSocketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnequipSocket",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"socketIndex" :
				{
					"Type" : "int"
				},
				"targetSlotIndex" :
				{
					"Type" : "int"
				},
				"forceUnequip" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UnequipSocket",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"socketIndex" :
				{
					"Type" : "int"
				},
				"targetSlotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatItemInSocket",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"socketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetSocketState",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"socketIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AcceptGeneratedItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DenyGeneratedItem",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StackLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Cargo",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Sockets",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DraggedItemAlreadyEquipped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DraggedItemAlreadyExclusive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemAlreadyEquipped",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemAlreadyExclusive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "InteractingAreaID",
			"IsStatic" : "false",
			"ReturnType" : "AreaID",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyItemCrafter":
	[
		{
			"Alias" : "CraftingCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{
				"itemGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyLifetime":
	[
		{
			"Alias" : "RemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyLoadingPier":
	[
		{
			"Alias" : "TonsPerSec",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the current amount of goods that can be loaded / unloaded per sec. Doesn\'t include any ship loading times  ",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMaintenance":
	[
		{
			"Alias" : "MaintenanceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StaticMaintenanceCost",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleConsumerPriorityAlarm",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DeltaInputSaturation",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the current workforce productivity",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAdditionalWorkforceFullySatisfied",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the additional workforce request is fully satisfied.",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMesh":
	[
		{
			"Alias" : "LocalWind",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets local Wind on/off (blazing sails)",
			"Arguments" :
			{
				"on" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ShortenSails",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "sets shortened sails on/off",
			"Arguments" :
			{
				"shorten" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Visible",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "shows or hides the mesh",
			"Arguments" :
			{
				"isVisible" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ToggleDecalCondition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "ToggleRenderCondition",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMetaPersistent":
	[
		{
			"Alias" : "PropertyID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "\\see CGameObjectProperty::GetPropertyID()",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyModuleOwner":
	[
		{
			"Alias" : "ModuleLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns count of unlocked building module slots",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MainModuleLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PalaceModuleLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountForGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "also counts blueprints and not working modules",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ModuleLimitForGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasAdditionalModule",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AdditionalModule",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "this only includes working modules",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PalaceModuleCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountBP",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"includeBlueprints" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AmountIrrigatedModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountIrrigatedModules_CapAtLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AmountNotIrrigatedModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountIncludeNonWorking",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountIncludeNonWorking_CapAtLimit",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNonIrrigatedModulesBelowLimit",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountIncludingPreview",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns count of built building modules, only working ones (not irrigated tiles are considered)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ModuleCountIncludingPreviewExcludingNonWorking",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DefaultModuleGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingBuildRights",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"moduleGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyMonument":
	[
		{
			"Alias" : "FillStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativeCycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average productivity which is the smoothed productivity over time",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentProductivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the current productivity in this very moment. This is not an average value. For the average value which is used in the UI use GetProductivity",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgradeList",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CItemAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBase",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBoostPotential",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityFarmFieldBoost",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by all newspaper effects, e.g. 0.2 for +20%",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByArmamentEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the warpreparation/armament newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByProductivityEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the productivity newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Inputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "returns the actual current inputs (affected by items)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FullOutputStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoWarehouseInRange",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is not a single connection to a warehouse the range of this factory",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsAFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCheatFertility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UpgradeTarget",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Gets the time needed for the upgrade if all goods are available",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PauseUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "pause the simulated upgrade",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInConstructionState",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"state" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatUpgradeMicro",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "finish current micro phase",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatMicroPhase",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "force start current micro phase",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentPhase",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get upgrade level",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxPhase",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "get highest possible upgrade level",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsEventPreparing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsEventRunning",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsEventFinished",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingEventTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatSkipEventTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventWorkforceUsed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EventGoodsRange",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				},
				"requirementGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventWorkforceByGUID",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventMaxUsableWorkforceAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventWorkforceUsedByGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PossibleEventGoods",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"requirementGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EventGoodsReductionPercent",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"eventGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "OpenExhibitionUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyMotorizable":
	[
		{
			"Alias" : "IsMotorized",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyNameable":
	[
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Set the Name (if empty it will be generated)",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDStringW"
				}
			}
		},
		{
			"Alias" : "Name",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the VehicleName",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyPalace":
	[
		{
			"Alias" : "Palace",
			"IsStatic" : "true",
			"ReturnType" : "CPropertyPalace",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMinistryUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PalaceEffectRange",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentParagonLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseEffect",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AttractivenessNeededToUnlockMinistry",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryTypeIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveBaseOrParagonEffect",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AttractivenesNeededForNextParagonLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AttractivenesNeededForCurrentParagonLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ParagonWorforceBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonModuleInfluenceBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonProductivityBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonServiceRangeBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonIslandStorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonAttractivenessBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ParagonSpecialistSpawnBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyPalaceMinistry":
	[
		{
			"Alias" : "SetMinistryType",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"ministryType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetDecreeTier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"decreeTier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EffectRange",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyPausable":
	[
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePause",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPausedByQuest",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyPirate":
	[
		{
			"Alias" : "DebugIncreaseAreaOfActivityRange",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"additionalRadius" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CPropertyRecipeBuilding":
	[
		{
			"Alias" : "ChangeRecipe",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyRepairCrane":
	[
		{
			"Alias" : "RepairAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RepairAmountPerSecond",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns healing increase by newspaper effects, e.g. 0.2 for +20%.",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyResidence7":
	[
		{
			"Alias" : "PositiveGoodViewInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NegativeGoodViewInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodViewStartValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodViewValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidentMax",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidentLimitBySupply",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResidentCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatFill",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Occupancy",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the average satisfaction for all unlocked products. Considers the current need weight\nvalues between [0-1]",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Satisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "BusNeedDistanceSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "MallNeedsSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "calculates the progress in one of the three mall categories (high life monument)\nexpensive function, should only be used for infotips",
			"Arguments" :
			{
				"categoryIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MallNeedsCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "translates an index to one of the three mall categories (high life monument)",
			"Arguments" :
			{
				"categoryIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MallNeedsCategoryCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the amount of configured mall categories (high life monument)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxMallNeedsSupply",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "how many additional residents are added when all mall needs are satisfied (high life monument)\nexpensive function, should only be used for infotips",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentMallNeedsSupply",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "how many additional residents are currently supplied by mall needs (high life monument)\nexpensive function, should only be used for infotips",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBusNeedSatisfactionReduced",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if need saturation is reduced by attractiveness/productivity",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "SatisfactionTrend",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "TotalHappinessDebuffForNeed",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the total percentage amount this need is debuffed by (e.g. 10 for 10%)",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HappinessDebuffForNeedByCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the percentage amount this need is debuffed by for a certain category (e.g. 10 for 10%)",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				},
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebuffAmountForCategory",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the percentage amount a certain happiness category is applying a debuff for (e.g. 10 for 10%)",
			"Arguments" :
			{
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationMovesOut",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopulationMovesIn",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessByNeeds",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessWorkingCondition",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessByHotspots",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessByAttractivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HappinessByBuffs",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "MoneyOutput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Output information",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WorkforceOutput",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ResearchOutput",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentHappinessForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Supply information",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentSupplyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentHeatForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentMoneyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "money per minute this residence building produces currently",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentResearchForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxHappinessForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxSupplyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxHeatForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxResearchForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MaxMoneyForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Max money per minute this residence building produces when it\'s full",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentHeatSatisfaction",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentBaseHeat",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HeatByUpgrades",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Influence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyRiver":
	[
		{
			"Alias" : "MoveRiverLevel",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts to move the RiverLevel to the a new Offset",
			"Arguments" :
			{
				"newOffset" :
				{
					"Type" : "float"
				},
				"duration" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertySelection":
	[
		{
			"Alias" : "IsSelected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Selection\nGets / Sets the selection flag.",
			"Arguments" :
			{

			}
		}
	],
	"CPropertySellable":
	[
		{
			"Alias" : "OnSale",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sale" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "OnSale",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "if a ship is on sale it becomes an infolayer on top of it and\ncan be bought by any of the allowedBuyers.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AffordableByCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentParticipantBuyPrice",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SellPrice",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CanBeSoldToTrader",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatBuy",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuyNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"participantIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CPropertyShipIncident":
	[
		{
			"Alias" : "ActiveIncidentType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsInfected",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatInfect",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatInfectRandom",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEndInfection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"incidentType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndAnyInfection",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatIgnoreIncidentPriority",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ToggleDebugRenderRadius",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemainingDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyShipMaintenance":
	[
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyShipyard":
	[
		{
			"Alias" : "CurrentConstructionGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Current Selected Construction Data",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsCurrentConstructionGUID",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConstructionTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RemainingRelativeTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildCostForShip",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{
				"shipGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by newspaper effects, e.g. 0.2 for +20%. Construction time will be decreased by 20% in this example",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatSkipRemainingTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyTrader":
	[
		{
			"Alias" : "RerollCosts",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "Returns the costs to reroll goods and items",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearSellCooldown",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Clear the cooldown for the given slot index.",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShipTradeFailed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "The ShipBuy or ShipSell Request has been declined by the player",
			"Arguments" :
			{
				"decliningParticipant" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ForceBuild",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "produces next ship",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyTradeRouteVehicle":
	[
		{
			"Alias" : "RouteName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of the current route. Empty when no route assigned",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPaused",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this ship is currently paused on the route",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyVisitorHarbor":
	[
		{
			"Alias" : "AreaVisitors",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "Access helper methods",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyWalking":
	[
		{
			"Alias" : "DebugGoto",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "DebugStop",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UnsetIdleTickCount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsMoving",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if an object is currently moving",
			"Arguments" :
			{
				"queryUnitState" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades, excluding wind, cargo & damage factors.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades_MaxWindSlowdown",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades with maximum wind opposing to the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithUpgrades_MaxWindSpeedup",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all current upgrades with maximum wind in favor of the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithStaticSpeedFactors",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all factors excluding wind (upgrades, cargo, damage)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithStaticSpeedFactors_MaxWindSlowdown",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all factors excluding wind (upgrades, cargo, damage) with maximum wind opposing to the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BaseSpeedWithStaticSpeedFactors_MaxWindSpeedup",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed of the ship including all factors excluding wind (upgrades, cargo, damage) with maximum wind in favor of the ship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AffectedByWind",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this object reacts to wind",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SessionTransferSpeedFactor",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the speed factor that is applied during a session transfer",
			"Arguments" :
			{

			}
		}
	],
	"CPropertyWarehouse":
	[
		{
			"Alias" : "StorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the storage bonus this building provides. BasicIslandStorage is included on kontors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StrategicGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the storable good if there is only one (coal/oil harbour)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageBonusInclModules",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the storage bonus this building provides including its modules. BasicIslandStorage is included on kontors",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StorageDifferenceToIslandStorage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the difference between this buildings storage and the total island storage capacity",
			"Arguments" :
			{
				"includeModules" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CPropertyWatered":
	[
		{
			"Alias" : "IsWatered",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RequiresWater",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CQuestInstance":
	[
		{
			"Alias" : "ActiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: active",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StateReachable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Sets the quest state to: reachable",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReachedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: reached\n\\param forceNoClaim true if the quest should be reached and not reachable if there is an reward to claim",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FailedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: failed",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AbortedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the quest state to: aborted",
			"Arguments" :
			{
				"isManually" :
				{
					"Type" : "bool"
				},
				"abortReason" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerAbortPopupNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Opens a generic popup with Accept or Abort",
			"Arguments" :
			{
				"genericPopup" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the quest is active",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasEnded",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the quest state is any of the ending states FAILED, REACHED, etc..",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the remaining time of this quest if there is a time limit",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleForceQuestTrackerVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the current quest tracker visibility",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleQuestConditionTreeVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles the current condition tree visibility",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestStoryText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the story text GUID of this quest",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "QuestDescriptionText",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the story text GUID of this quest",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShowPhotographyNewspaper",
			"IsStatic" : "true",
			"ReturnType" : "void",
			"Comment" : "Execute the quest photography success action with the given parameters",
			"Arguments" :
			{
				"questGUID" :
				{
					"Type" : "int"
				},
				"escapedPicturePath" :
				{
					"Type" : "CRDString"
				},
				"pictureArea" :
				{
					"Type" : "AreaID"
				}
			}
		}
	],
	"CQuestManager":
	[
		{
			"Alias" : "Quests",
			"IsStatic" : "true",
			"ReturnType" : "CQuestManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartQuestForCurrentPlayerNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Does the same as StartQuest(int questGUID) or StartQuestLine(int questLineGUID) depending on the given GUID but without return value and for the currently active session",
			"Arguments" :
			{
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetTutorialQuestsNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Quest",
			"IsStatic" : "false",
			"ReturnType" : "CQuestInstance",
			"Comment" : "Returns the quest with the given ID.",
			"Arguments" :
			{
				"questID" :
				{
					"Type" : "QuestID"
				}
			}
		},
		{
			"Alias" : "RunningQuestByGUID",
			"IsStatic" : "false",
			"ReturnType" : "CQuestInstance",
			"Comment" : "Returns the running instance of a specific GUID",
			"Arguments" :
			{
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerQuestConfirmationAcceptedNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Send the quest confirmation event for a given questID",
			"Arguments" :
			{
				"questID" :
				{
					"Type" : "QuestID"
				}
			}
		},
		{
			"Alias" : "DebugQuestGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the debug quest GUID for the debug page",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"newDebugParticipantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReachSelectedQuest",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Reaches the quest that is currently visible in the quest tracker",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatEndPoolCooldownNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Forces a quest pool cooldown to end immediately",
			"Arguments" :
			{
				"poolGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndQuestBlockingNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Forces a quest pool to stop a quest blocking",
			"Arguments" :
			{
				"poolGUID" :
				{
					"Type" : "int"
				},
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatEndQuestTimerNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Reduces a quest delay or latency timer to 0",
			"Arguments" :
			{
				"questGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TriggerGiantApeEasterEgg",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CRecipeAsset":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RecipeAssetData",
			"IsStatic" : "true",
			"ReturnType" : "CRecipeAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasUnlockConditionFluffUnlockText",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true, if the special fluff condition texts should be displayed for the given recipe",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetUnlockConditionFluffText",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "Returns the Asset that contains the set up unlock condition fluff text",
			"Arguments" :
			{

			}
		}
	],
	"CRecordingManager":
	[
		{
			"Alias" : "Records",
			"IsStatic" : "true",
			"ReturnType" : "CRecordingManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StartStopRecording",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts or finishes the recording",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Player",
			"IsStatic" : "false",
			"ReturnType" : "CRecordingPlayer",
			"Comment" : "Get the player instance, which is responsible for playback of recorded replays",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Recorder",
			"IsStatic" : "false",
			"ReturnType" : "CGamePlayRecorder",
			"Comment" : "Get the recorder instance, which is responsible for recording of replays",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BackToTitleAndCleanUp",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Unloads the current corporation and goes back to title screen, after unloading also resets the recording/replay classes",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectedSavegameOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the selected dropdown option from the debug page",
			"Arguments" :
			{
				"selection" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CRecordingPlayer":
	[
		{
			"Alias" : "StartPlayback",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlaybackDebugLog",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Set the current line number (called via replay script)",
			"Arguments" :
			{
				"lineNumber" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SelectedOption",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Sets the selected dropdown option from the debug page",
			"Arguments" :
			{
				"text" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CancelReplay",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Wrapper function for debug page to throw an error and stop the replay",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EnableSuccessChecks",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Enables/disables the success checks for the replay",
			"Arguments" :
			{
				"enable" :
				{
					"Type" : "bool"
				}
			}
		}
	],
	"CRegrowManager":
	[
		{
			"Alias" : "Regrow",
			"IsStatic" : "true",
			"ReturnType" : "CRegrowManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CRenovatabilityChecker":
	[
		{
			"Alias" : "IsRenovatable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reasons",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CNotRenovatableContext>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CResearchManager":
	[
		{
			"Alias" : "Research",
			"IsStatic" : "true",
			"ReturnType" : "CResearchManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectRecipes",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Selects randomly some recipes from a configured amount of subcategories of the given researchfield",
			"Arguments" :
			{
				"researchField" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResearchRecipes",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Researches the selected recipes of the given subcategory",
			"Arguments" :
			{
				"choosenCategoryGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AmountOfResearchedRecipes",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of already researched recipes in the given ResearchField",
			"Arguments" :
			{
				"researchField" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AmountOfResearchedRecipesInPool",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of already researched recipes in the given pool",
			"Arguments" :
			{
				"poolGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AmountOfRecipesInTotal",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the number of recipes that can be researched in total in the given ResearchField with the currently active DLCs",
			"Arguments" :
			{
				"researchField" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatAllRecipes",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "User gets instantly all recipes of the given pool",
			"Arguments" :
			{
				"poolGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CraftOrAddToQueue",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Starts to craft the given item/godlike if payable and nothing is currently developed\nand the queue is empty, if not it will be added to the queue",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TransferCraftedItems",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Transfers the crafted products to the kontor or adds the building permit",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemoveQueuedEntry",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Removes the queued entry at index in the crafting queue",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "IsCraftingInProcess",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is an ongoing crafting process",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CraftingProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product of the ongoing crafting process",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CraftingTimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time it still takes the complete the current crafting based on the workforce the user has assigned to the research center",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemCraftingResearchCosts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the research costs for the given item or godlike ",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"queuePosition" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "ItemCraftingResearchCostsNotQueued",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResearchCraftingCostPayable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there are enough research points to craft the item/godlike ",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"queuePosition" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "ResearchCraftingCostOverCap",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the costs of the item are over the current cap of research points",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"queuePosition" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "ItemCraftingMinimumWorkforceAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the required workforce to craft the given item or godlike",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CraftingMinimumWorkforceAvailable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the player has at least the minimum workforce available",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"isCurrentlyCrafted" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ItemCraftingMinimumWorkforceTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time it needs to craft the given item or godlike with the minimum workforce amount",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemCraftingMaximumWorkforceAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the maximum workforce that can be assigned to craft the given item or godlike",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemCraftingMaximumWorkforceTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time it needs to craft the given item or godlike with the maximum workforce amount",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of available workforce for a crafting process.\nIf excludeResearchCenterConsumption is true, this method returns all available workforce + the workforce that is currently in use by the research center",
			"Arguments" :
			{
				"excludeResearchCenterConsumption" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "AddGodlikeCheat",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds a godlike item of the given guid to the storage of the user",
			"Arguments" :
			{
				"godlikeGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GodlikeAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of available godlikes for the given guid",
			"Arguments" :
			{
				"godlikeGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsGodlikePermit",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given guid is a buildpermit that can be gained by an godlike item",
			"Arguments" :
			{
				"buildingGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SkipCraftingTimeCheat",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Skips the remaining crafting time",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AddToDonationStorage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds the given item to the donation storage. The item will still be available in the area of the research center until the player donates the storage",
			"Arguments" :
			{
				"itemGuid" :
				{
					"Type" : "int"
				},
				"itemAmount" :
				{
					"Type" : "int"
				},
				"useStoredItems" :
				{
					"Type" : "bool"
				},
				"useEquippedItems" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "RemoveFromDonationStorage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Removes the given items from the donation storage",
			"Arguments" :
			{
				"itemGuid" :
				{
					"Type" : "int"
				},
				"itemAmount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DonateItemsInStorage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Donates all items that are currently in the donation storage",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ClearDonationStorage",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Clears the donation storage. Items won\'t be removed from the area",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DonationStorageValue",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of researchpoints the player will get when he donates everything in storage",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DonationStorageValueOverflow",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of researchpoints that exceeds the storage capacity when donating the storage",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DonateItemUnderCursor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Directly donates the item that is currently located under the cursor of the user if possible (netsafe)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsItemUnderCursorDonatable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the item that is currently located under the cursor is donatable",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DonationValueOfItemUnderCursor",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of research points the user would gain for the donation of the item under the cursor",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DonationValueOfItem",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of research points the user would gain for the given item",
			"Arguments" :
			{
				"itemGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResearchCenterWorkforceAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"workforceAmount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "FertilitySwapAffectedBuildingAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of affected buildings of the current fertility swap operation",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FertilitySwapAffectedBuildingType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the type of the affected building of the current fertility swap operation",
			"Arguments" :
			{

			}
		}
	],
	"CRewardsManager":
	[
		{
			"Alias" : "Rewards",
			"IsStatic" : "true",
			"ReturnType" : "CRewardsManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsClubReward",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CSelectionGroupController":
	[
		{
			"Alias" : "Store",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Stores the current selection under the given group id",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Restore",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Restores the selection of a given group id. If the selection was already selected, camera will jump to the group",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AddToLast",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Adds the selection of the given group id with the currently selected group. if the currently selected group isn\'t stored, nothing happens",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsEmpty",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given group not exists or is empty",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupSize",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the amount of objects in the given group",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Group",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CGameObject>",
			"Comment" : "Returns all ships of the given group as vector",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupSortedToType",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CTextSourceListValue>",
			"Comment" : "Returns all type of ships of the given group. Values gives the number of ships",
			"Arguments" :
			{
				"groupID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "GroupID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the ID of the group that contains the given object. Returns -1 if the object is not in any group",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "GameObjectID"
				}
			}
		}
	],
	"CSelectionManager":
	[
		{
			"Alias" : "Selection",
			"IsStatic" : "true",
			"ReturnType" : "CSelectionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Picked",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Objects",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CGameObject>",
			"Comment" : "Returns the list of selected objects",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns a selected object from the list of selected objects. If there are multiple objects in the list it is undefined which will be returned.",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ContainsWarship",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the selection contains at least one warship",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SetEnableDebugDrawPicking",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"enable" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "SelectNextRuin",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "selects the next ruin",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectIslandKontor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "select any building with the specific GUID",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionGroup",
			"IsStatic" : "false",
			"ReturnType" : "CSelectionGroupController",
			"Comment" : "Returns the SelectionGroupController to store or restore selection groups",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"all" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UpgradeSelectedFloor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"all" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "DestructSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePauseForBuildingsOfSelectedType",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChangeParticipantOfSelected",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChangeAlternativeGrassColor",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionCameraManager":
	[
		{
			"Alias" : "SessionCamera",
			"IsStatic" : "true",
			"ReturnType" : "CSessionCameraManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToWorldPos",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "helper methods for Textsource to look at a certain worldPosition",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"y" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ToWorldPos",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "helper methods for Textsource to look at a certain worldPosition \nthe y coordinate will be the terrain height.",
			"Arguments" :
			{
				"x" :
				{
					"Type" : "float"
				},
				"z" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "CheatToGameObject",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "this is not the best as it uses call in thread to ensure it\'s called",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "JumpToEasterEgg",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSuperSpeed",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAllRewards",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionCoastManager":
	[
		{
			"Alias" : "AreaCoast",
			"IsStatic" : "true",
			"ReturnType" : "CSessionCoastManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionFeedbackManager":
	[
		{
			"Alias" : "Feedback",
			"IsStatic" : "true",
			"ReturnType" : "CSessionFeedbackManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HideFeedbackInArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Hide specific Feedback in Area. Should only be used by content design (as we use name as identifier here. Better usage: Register it directly at PerBuildingAreaFeedback)",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDString"
				},
				"centerX" :
				{
					"Type" : "int"
				},
				"centerZ" :
				{
					"Type" : "int"
				},
				"radius" :
				{
					"Type" : "int"
				},
				"hideTrains" :
				{
					"Type" : "bool"
				},
				"hideVehicles" :
				{
					"Type" : "bool"
				},
				"hidePersons" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "UnHideFeedbackInArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Name as identifier: Should only be used by content design",
			"Arguments" :
			{
				"name" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "BehaviourFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"behaviourType" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CSessionFreeAreaProductivityManager":
	[
		{
			"Alias" : "FreeAreaProductivity",
			"IsStatic" : "true",
			"ReturnType" : "CSessionFreeAreaProductivityManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionParticipantManager":
	[
		{
			"Alias" : "SessionParticipants",
			"IsStatic" : "true",
			"ReturnType" : "CSessionParticipantManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GetParticipant",
			"IsStatic" : "false",
			"ReturnType" : "CGameObject",
			"Comment" : "Returns GameObject belonging to given ParticipantID",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CheatCreateSessionParticipant",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Only to be used for cheat!",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CSessionRandomManager":
	[
		{
			"Alias" : "Random",
			"IsStatic" : "true",
			"ReturnType" : "CSessionRandomManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerateSequence",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GenerationAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"amount" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "GenerationGranularity",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"granularity" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CSessionTradeRoute":
	[
		{
			"Alias" : "Station",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRouteStationInfo",
			"Comment" : "Returns the route with the given id",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "LostShipName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns the name of a lost ship with the given id. Empty string if there is none",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "IsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"errorType" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NotEnoughSlotsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"slotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NotEnoughSlotsForShipsErrorActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "NotEnoughStationsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IslandUnderSiegeActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "NoValidPierActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "NoTradeRightsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "ConfiguredGoodNotTradedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "LoadedGoodNeverUnloadedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "UnloadedGoodNeverLoadedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "GoodsDontMatchActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "StorageFullActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "StorageEmptyActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				},
				"goodID" :
				{
					"Type" : "GoodTradeID"
				}
			}
		},
		{
			"Alias" : "NoGoodsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoShipsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "AllShipsPausedActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LongWaitingTimeActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"stationID" :
				{
					"Type" : "StationTradeID"
				}
			}
		},
		{
			"Alias" : "MismatchingGoodActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "MismatchingGoodActiveForGood",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"shipID" :
				{
					"Type" : "MetaGameObjectID"
				},
				"goodGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ActiveErrorCount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns how many errors are currently active. If checkAllErrors are false, some errors are skipped that should not be displayed in the UI",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTradeRouteGoodInfo":
	[
		{
			"Alias" : "Loading",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "True if a good is loaded. False if unloaded",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets/Sets the ProductGUID",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Gets/Sets the amount of the good to transfer",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GoodData",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTradeRouteStationInfo":
	[
		{
			"Alias" : "Good",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRouteGoodInfo",
			"Comment" : "Returns the info about a good trade with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "HasGood",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if a GoodInfo object with the given id exists",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "IsCliffIsland",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the station belongs to a cliff island",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "StationBelongsToCurrentParticipant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentParticipantHasTradeRights",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CSessionTransferManager":
	[
		{
			"Alias" : "SessionTransfer",
			"IsStatic" : "true",
			"ReturnType" : "CSessionTransferManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsTransfering",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if an object with the given id is waiting for it\'s transfer",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "TransferTimeLeft",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the time left until the transfer is fulfilled",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		},
		{
			"Alias" : "TargetSession",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the guid of the target session of the given object",
			"Arguments" :
			{
				"objectID" :
				{
					"Type" : "MetaGameObjectID"
				}
			}
		}
	],
	"CShipFleet":
	[
		{
			"Alias" : "Ships",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<GameObjectID>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CShortcutManager":
	[
		{
			"Alias" : "ShortcutManager",
			"IsStatic" : "true",
			"ReturnType" : "CShortcutManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ShortcutTooltip",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns a special localized string that can be used to display shortcuts in infotips",
			"Arguments" :
			{
				"identifier" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "HasShortcutTooltip",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the shortcut with the given identifier can be displayed in infotips",
			"Arguments" :
			{
				"identifier" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CSoundManager":
	[
		{
			"Alias" : "Sound",
			"IsStatic" : "true",
			"ReturnType" : "CSoundManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PlayCameraSoundEffect",
			"IsStatic" : "false",
			"ReturnType" : "unsigned int",
			"Comment" : "Use for camera sequences to play global sound effects.",
			"Arguments" :
			{
				"soundGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StopCameraSoundEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Use for camera sequences to stop global sound effects started with playCamera.",
			"Arguments" :
			{
				"soundGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleProfiling",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleAdvancedDebug",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleGlobalPersistentEvents",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDebugFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "rduint"
				}
			}
		},
		{
			"Alias" : "DebugEmitterFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"string" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ResetDebugEmitterFilter",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CheatPlaySound",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CStatisticsHistoryData":
	[
		{
			"Alias" : "TimeSinceSnapshot",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Returns a string that contains the time since that is passed since the given snapshot",
			"Arguments" :
			{
				"snapshotIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PopulationAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the population amount for the given population at the given snapshot index (0 = oldest)",
			"Arguments" :
			{
				"snapshotIndex" :
				{
					"Type" : "int"
				},
				"populationGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product amount for the given product at the given snapshot index (0 = oldest)",
			"Arguments" :
			{
				"snapshotIndex" :
				{
					"Type" : "int"
				},
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductGeneration",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product generation for the given product at the given snapshot index (0 = oldest)",
			"Arguments" :
			{
				"snapshotIndex" :
				{
					"Type" : "int"
				},
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductConsumption",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the product consumption for the given product at the given snapshot index (0 = oldest)",
			"Arguments" :
			{
				"snapshotIndex" :
				{
					"Type" : "int"
				},
				"productGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CStreetOverlayManager":
	[
		{
			"Alias" : "StreetOverlay",
			"IsStatic" : "true",
			"ReturnType" : "CStreetOverlayManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleInfoLayerVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleEnableStatus",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"overlayIndex" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CTargetManager":
	[
		{
			"Alias" : "Target",
			"IsStatic" : "true",
			"ReturnType" : "CTargetManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DestructionPayback",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DestructionCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsBlueprint",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextManager":
	[
		{
			"Alias" : "Text",
			"IsStatic" : "true",
			"ReturnType" : "CTextManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ValidateAllTexts",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceListValue":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceManager":
	[
		{
			"Alias" : "TextSourceManager",
			"IsStatic" : "true",
			"ReturnType" : "CTextSourceManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugTextSource",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"val" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CTextSourceObjectWrapper":
	[
		{
			"Alias" : "IsInt",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsArea",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAsset",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Int",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Optional<int>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Object",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Optional<CGameObject>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Optional<CConstructionArea>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Asset",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Optional<CAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceUnlockDataEntry":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Icon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Text",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasOperatorAnd",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasOperatorOr",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "rdint64",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TargetAmount",
			"IsStatic" : "false",
			"ReturnType" : "rdint64",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTextSourceUtility":
	[
		{
			"Alias" : "AssetForValue",
			"IsStatic" : "true",
			"ReturnType" : "CAsset",
			"Comment" : "Utility",
			"Arguments" :
			{
				"mappingGUID" :
				{
					"Type" : "int"
				},
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "And",
			"IsStatic" : "true",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"value1" :
				{
					"Type" : "bool"
				},
				"value2" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Not",
			"IsStatic" : "true",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "Greater",
			"IsStatic" : "true",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"greater" :
				{
					"Type" : "float"
				},
				"smaller" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CToolOneManager":
	[
		{
			"Alias" : "ToolOneManager",
			"IsStatic" : "true",
			"ReturnType" : "CToolOneManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugVariable",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DebugVariable",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		}
	],
	"CToolOneTextHelper":
	[
		{
			"Alias" : "ToolOneHelper",
			"IsStatic" : "true",
			"ReturnType" : "CToolOneTextHelper",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "InfoDescription",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildingCategory",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ConstructionCategoryDescription",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Attractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsTree",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsSlotObject",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasSlotType",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"slot" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductionRegionsForProduct",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "Returns a list of regions GUIDs in which this product can be produced (requires to be configured in T1)",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemBuffs",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemBuffsSpecial",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemRarity",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemRarityColor",
			"IsStatic" : "false",
			"ReturnType" : "rduint",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsItemRarityQuest",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionItemFluff",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemExclusiveGroup",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasExclusiveGroup",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemAllocation",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasAllocation",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsSpecialist",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemActionDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HasItemActionDescription",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemCooldown",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BarrageDuration",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsDestroyedAfterCooldown",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasCharges",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemActiveBuff",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemSet",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemSetItems",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemIsActive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemOrBuffEffectTargets",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsObjectEffectTarget",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"objectGUID" :
				{
					"Type" : "int"
				},
				"effectGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemHasExpeditionAttribute",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"getTraits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ItemExpeditionAttributes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"getTraits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "ExpeditionThreatAttributes",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionThreatFirstAttribute",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemExpeditionThreats",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IncidentResolverUnitsForTargetBuildings",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<int>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				},
				"specialUnits" :
				{
					"Type" : "bool"
				}
			}
		},
		{
			"Alias" : "KamikazeItemDamageForSelected",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MainBuildingOutput",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildingOutput",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildCost",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "BuildCosts",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BuildCostSelected",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionName",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionIcon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionDescription",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionDifficulty",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExpeditionRegion",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"expeditionGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnlockRequirements",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceUnlockDataEntry>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SlotAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SocketAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HitPoints",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AttackDamage",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ReloadTimeInMS",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DPS",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ShipMaintenance",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"shipguid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SelectionAggresive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionDefensive",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionStandGround",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SelectionMixedStance",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionStayTogether",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionMoveIndividually",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "GroupSelectionMixed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "MaxPopulationNeededForUnlocks",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ItemTradePrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"itemGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductBasePrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StartProducts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				},
				"difficulty" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BaseShareInfluence",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ItemGUIDFromEffectOrEffectContainer",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ForwardedEffectGuidOrSelf",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsForwardingEffect",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Palace",
			"Arguments" :
			{
				"effectGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MinistryName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"effectContainerGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AmountPalaceModulesForCompanyLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"curentCompanyLevel" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "PalaceRangePerModule",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsPalaceModule",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"moduleGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NextUnlocks",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CAsset>",
			"Comment" : "",
			"Arguments" :
			{
				"currentAttractiveness" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NextUnlockAttractiveness",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"currentAttractiveness" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "MinistryIndex",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"effectGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequiresIrrigation",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Irrigation",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsBoostedByIrrigation",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RequiresDirectCanalConnection",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SkinName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Object Skins",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SkinDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsMonument",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HighscoreIcon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Highscore",
			"Arguments" :
			{

			}
		}
	],
	"CTradeContractManager":
	[
		{
			"Alias" : "Contracts",
			"IsStatic" : "true",
			"ReturnType" : "CTradeContractManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RemoveContract",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Destroys the last trade contract in the area",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "TraderGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Setters for one contract\n\"areaId\" is the area where the contract is located. DebugInfo TextSources do not support AreaID, so we need a version with rdint16 for TextSources.\n\"index\" is the index of the contract in that area (contracts are just a vector)",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				},
				"index" :
				{
					"Type" : "int"
				},
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExportGoodGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				},
				"index" :
				{
					"Type" : "int"
				},
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ImportGoodGUID",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				},
				"index" :
				{
					"Type" : "int"
				},
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ExportAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				},
				"index" :
				{
					"Type" : "int"
				},
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ImportAmount",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				},
				"index" :
				{
					"Type" : "int"
				},
				"amount" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TradeHistory",
			"IsStatic" : "false",
			"ReturnType" : "TradeHistory",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "AreaID"
				},
				"contractIndex" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "DebugSelectGoodForMoreInfo",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "selects a good to display its GoodValue calculation",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IncreaseGoodXP",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Cheats",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				},
				"amount" :
				{
					"Type" : "ProductAmount"
				}
			}
		},
		{
			"Alias" : "FillPyramid",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SkipTransit",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"areaId" :
				{
					"Type" : "rdint16"
				}
			}
		},
		{
			"Alias" : "SkipLoadingTime",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleSkipTransit",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ConditionForImportGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Conditions",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsImportGoodLocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsConditionImportCounter",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsConditionExportCounter",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsConditionContractCounter",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "HighestExportGood",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TraderName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TraderDescription",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TraderIcon",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TraderMoodImage",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExportLevelNameForGood",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "Export Good Details",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "CurrentExportLevelNameForGood",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "LevelName",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExportXPForGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeededExportXPForGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "NeededExportXP",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExportModifierForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "Modifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ModuleUnlocksForGood",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ModuleUnlocks",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CTextSourceListValue>",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExportLevelColorForGood",
			"IsStatic" : "false",
			"ReturnType" : "rduint",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "LevelColor",
			"IsStatic" : "false",
			"ReturnType" : "rduint",
			"Comment" : "",
			"Arguments" :
			{
				"level" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ExchangeRatio",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"index" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProgressForGood",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns a float between 0 and 1, representating the progress from the current level to the next level",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ReachedLevelForProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the \"maximum ever reached\" level for a product",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsExportLevel",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ImportLevel",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "IsImporting",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Is the good defined as \"import\" in any contract?",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"guid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "TraderStatus",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDStringW",
			"Comment" : "",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		}
	],
	"CTradeOfferInfo":
	[
		{
			"Alias" : "Guid",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Price",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EndlessAmount",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CTradeRouteManager":
	[
		{
			"Alias" : "TradeRoute",
			"IsStatic" : "true",
			"ReturnType" : "CTradeRouteManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Route",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRoute",
			"Comment" : "Returns a trade route with the given id",
			"Arguments" :
			{
				"id" :
				{
					"Type" : "TradeRouteID"
				}
			}
		},
		{
			"Alias" : "ShowRouteUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Opens the given route in the UI",
			"Arguments" :
			{
				"routeID" :
				{
					"Type" : "TradeRouteID"
				}
			}
		},
		{
			"Alias" : "UIEditRoute",
			"IsStatic" : "false",
			"ReturnType" : "CSessionTradeRoute",
			"Comment" : "Gets the route which is currently edited in the UI",
			"Arguments" :
			{

			}
		}
	],
	"CTransferActionHandler":
	[
		{
			"Alias" : "DontUse",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Every Textsource class must have at least one TextSource function",
			"Arguments" :
			{

			}
		}
	],
	"CTransporterQueue":
	[
		{
			"Alias" : "Queued",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProcessingMax",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Processing",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CUIBindings":
	[
		{
			"Alias" : "Interface",
			"IsStatic" : "true",
			"ReturnType" : "CUIBindings",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePostcardView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleRotatingCameraView",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"slot" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "PopUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleMetaUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleBuildmenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleShipList",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleDiplomacyMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleTraderouteMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCompanyMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleVersionLabel",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleQuickNavigationMap",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsIncomeMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsPopulationMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsProductionMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsStorageMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsItemMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "OpenStatisticsShipList",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ReloadUI",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TogglePauseMenu",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "JumpToSession",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"sessionGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "SetUiScreenScaling",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetUiScreenHorizontalSpacing",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetUiScreenVerticalSpacing",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetUiScreenHorizontalPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "SetUiScreenVerticalPosition",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"value" :
				{
					"Type" : "float"
				}
			}
		},
		{
			"Alias" : "ResetUiScreenConfig",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleStateVisibility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"stateName" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ToggleStateUpdates",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"stateName" :
				{
					"Type" : "CRDString"
				}
			}
		},
		{
			"Alias" : "ChatInput",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"input" :
				{
					"Type" : "CRDString"
				}
			}
		}
	],
	"CUnlockManager":
	[
		{
			"Alias" : "Unlock",
			"IsStatic" : "true",
			"ReturnType" : "CUnlockManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Unlock",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Makes a GUID available for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "UnlockNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsUnlocked",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this GUID is available for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RelockNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Makes a GUID unavailable for use",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Relock",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CUpgradabilityChecker":
	[
		{
			"Alias" : "IsUpgradable",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeCosts",
			"IsStatic" : "false",
			"ReturnType" : "CBuildCost",
			"Comment" : "Returns the total costs for the upgrades",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Reasons",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CNotUpgradableContext>",
			"Comment" : "Returns the reasons and values why the building cannot be upgraded",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UpgradeTargetGUID",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the target upgrade guid",
			"Arguments" :
			{

			}
		}
	],
	"CVisitorManager":
	[
		{
			"Alias" : "Visitors",
			"IsStatic" : "true",
			"ReturnType" : "CVisitorManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Area",
			"IsStatic" : "false",
			"ReturnType" : "CAreaVisitors",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ResetArea",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"area" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ToggleDebugFlag",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{
				"flag" :
				{
					"Type" : "rduint"
				}
			}
		}
	],
	"CVoiceChat":
	[
		{
			"Alias" : "IsMicMuted",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsSpeakerMuted",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsIgnored",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"peerInt" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CWeatherManager":
	[
		{
			"Alias" : "Weather",
			"IsStatic" : "true",
			"ReturnType" : "CWeatherManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ChangeWind",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleWindRender",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggles debug rendering of wind-speedups for ships",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleMirageEffect",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Toggle Africa Heat Effect with a cheat",
			"Arguments" :
			{

			}
		}
	],
	"CWinLoseManager":
	[
		{
			"Alias" : "WinLose",
			"IsStatic" : "true",
			"ReturnType" : "CWinLoseManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "DefeatCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "LoseCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "WinCurrentPlayer",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CWorkforceIslandTransfer":
	[
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SourceArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TargetArea",
			"IsStatic" : "false",
			"ReturnType" : "CConstructionArea",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"CWorkforceMap":
	[
		{
			"Alias" : "Production",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Consumption",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Balance",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CWorkforceTransferManager":
	[
		{
			"Alias" : "WorkforceTransferManager",
			"IsStatic" : "true",
			"ReturnType" : "CWorkforceTransferManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsAddedToWorkforcePool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the given area is part of a workforce pool (means there is an workforce connector build on that area)",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "HasActiveWorkforcePool",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the workforce pool is active (has at least 2 functional workforce connectors)",
			"Arguments" :
			{
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AvailableWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "CWorkforceMap",
			"Comment" : "if a workforce transfer has been established, this method returns the sum of the available workforce balances of all connected areas plus its local non transferable workforce \nif there is no workforce transfer, the local workforce balance of the given area will be returned",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		},
		{
			"Alias" : "TransferedWorkforce",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the amount of workforce this area is importing or exporting",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IslandTransfers",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CWorkforceIslandTransfer>",
			"Comment" : "Returns a vector with all transfers starting from the given area or have it as target\nIf no area is given, this method returns the transfers of the area of the selected object",
			"Arguments" :
			{
				"workforceGuid" :
				{
					"Type" : "ProductGUID"
				}
			}
		},
		{
			"Alias" : "ProvidedWorkforceOnArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the provided workforce on a given area. All transfers are subtracted",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "EmployedWorkforceOnArea",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the employed workforce on a given area. All transfers are subtracted",
			"Arguments" :
			{
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"workforceGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"CWorldMapSessionManager":
	[
		{
			"Alias" : "WorldMap",
			"IsStatic" : "true",
			"ReturnType" : "CWorldMapSessionManager",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Fleet",
			"IsStatic" : "false",
			"ReturnType" : "CShipFleet",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"Global":
	[

	],
	"IConditionEvent":
	[
		{
			"Alias" : "ConditionKey",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::CRDString",
			"Comment" : "Returns a unique string identifier for this condition",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "SatisfyRecursiveNet",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "Satisfies this condition and all subconditions",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolved",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the condition and all subconditions are resolved",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsResolvedSelf",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if this condition has ended",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Amount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get / Set the call amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Get the current call amount",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Context",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the template event data as a string for the UI",
			"Arguments" :
			{

			}
		}
	],
	"IIncident":
	[
		{
			"Alias" : "CheatSpread",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"ILogisticNode":
	[
		{
			"Alias" : "TransporterQueue",
			"IsStatic" : "false",
			"ReturnType" : "UniquePtr<CTransporterQueue>",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"IncidentResolverState":
	[
		{
			"Alias" : "IsIdle",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsOnTheWay",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealing",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealingFire",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealingRiot",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealingIllness",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealingExplosion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsHealingArcticIllness",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"INotification":
	[
		{
			"Alias" : "Value",
			"IsStatic" : "false",
			"ReturnType" : "CTextSourceObjectWrapper",
			"Comment" : "",
			"Arguments" :
			{
				"key" :
				{
					"Type" : "CRDStringW"
				}
			}
		}
	],
	"TradeHistory":
	[
		{
			"Alias" : "COUNT",
			"IsStatic" : "false",
			"ReturnType" : "rduint64",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasEntries",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ExportProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "ExportAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "ImportProduct",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "rduint64"
				}
			}
		},
		{
			"Alias" : "ImportAmount",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"index" :
				{
					"Type" : "rduint64"
				}
			}
		}
	],
	"VirtualSpaceAttacker":
	[
		{
			"Alias" : "DPS",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceBuildCost":
	[
		{
			"Alias" : "FromGuid",
			"IsStatic" : "false",
			"ReturnType" : "SharedPtr<CBuildCost>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceBuilding":
	[
		{
			"Alias" : "IsAllowedInCurrentRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "returns true if the user is allowed to build the given building in the region of the active session",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "AllowedInRegion",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if the given building associated with the given region",
			"Arguments" :
			{
				"regionIndex" :
				{
					"Type" : "int"
				},
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeededSlotType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns slot type to which the given building guid needs to snap to",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "TerrainType",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns terrain type of the given building guid",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "KontorSwitchCosts",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "returns the switch costs of kontor to imperial kontor",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "IsStreet",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "checks if street data is available",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsUnique",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "checks if unique data is available",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "HideCount",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "checks if building should show count in build menu infotip",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceDistribution":
	[
		{
			"Alias" : "Amounts",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAsset>",
			"Comment" : "StaticData",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceDockland":
	[
		{
			"Alias" : "LoadingSpeedBoostPerModule",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the loading speed bonus factor per speed up module",
			"Arguments" :
			{
				"docklandGuid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceElectricity":
	[
		{
			"Alias" : "NeedsElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanBeBoostedByElectricity",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceExpedition":
	[
		{
			"Alias" : "OptionAttribute",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"optionGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceFactory":
	[
		{
			"Alias" : "Inputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "Static Data",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Outputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CycleTimeRespectElectricity",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "Returns the cycle time for the given factory. If electricity is mandatory, the electricity boost will be applied to the production time",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CurrentAreaHasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsPowerplant",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsHeatProvider",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceHappiness":
	[
		{
			"Alias" : "UsesHappinessCategory",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Happiness",
			"Arguments" :
			{
				"populationGUID" :
				{
					"Type" : "int"
				},
				"category" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "BelongsToNeedHappinessCategory",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"productGUID" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceHeat":
	[
		{
			"Alias" : "NeedsHeat",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceHeatProvider":
	[
		{
			"Alias" : "FillStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RelativeCycleTime",
			"IsStatic" : "false",
			"ReturnType" : "rdtime",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Progress",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Productivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the average productivity which is the smoothed productivity over time",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "CurrentProductivity",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "Returns the current productivity in this very moment. This is not an average value. For the average value which is used in the UI use GetProductivity",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgrade",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityUpgradeList",
			"IsStatic" : "false",
			"ReturnType" : "rdsdk::Vector<CItemAsset>",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBase",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityBoostPotential",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ProductivityFarmFieldBoost",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityIncrease",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by all newspaper effects, e.g. 0.2 for +20%",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByArmamentEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the warpreparation/armament newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NewspaperProductivityByProductivityEffect",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns productivity increase by the productivity newspaper effect",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Inputs",
			"IsStatic" : "false",
			"ReturnType" : "Vector<CProductAmount>",
			"Comment" : "returns the actual current inputs (affected by items)",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "FullOutputStorage",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NoWarehouseInRange",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if there is not a single connection to a warehouse the range of this factory",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "NeedsAFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HasNeededFertility",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "ToggleCheatFertility",
			"IsStatic" : "false",
			"ReturnType" : "void",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "EconomyModifier",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"modifier" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ProductionGood",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"VirtualSpaceMaintenance":
	[
		{
			"Alias" : "PopulationLevel",
			"IsStatic" : "false",
			"ReturnType" : "CPopulationAsset",
			"Comment" : "",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Workforce",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "",
			"Arguments" :
			{
				"assetGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "CanUseWorkforceTransfer",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"workforceGUID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "Costs",
			"IsStatic" : "false",
			"ReturnType" : "PoolPtr<Vector<CProductAsset>>",
			"Comment" : "Textsource",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpacePier":
	[
		{
			"Alias" : "TonsPerSec",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "returns the static amount of goods that can be loaded / unloaded per sec. Doesn\'t include any ship loading times  ",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceRepairCrane":
	[
		{
			"Alias" : "RepairAmountMinute",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "RepairAmountSecond",
			"IsStatic" : "false",
			"ReturnType" : "float",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceStaticData":
	[
		{
			"Alias" : "StaticData",
			"IsStatic" : "true",
			"ReturnType" : "VirtualSpaceStaticData",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "BuildCost",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceBuildCost",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Expedition",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceExpedition",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Happiness",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceHappiness",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "TransferActions",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceTransferActions",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "UniqueBuildings",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceUniqueBuildings",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Attacker",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceAttacker",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Building",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceBuilding",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Distribution",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceDistribution",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Dockland",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceDockland",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Electricity",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceElectricity",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Factory",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceFactory",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Heat",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceHeat",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "HeatProvider",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceHeatProvider",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Pier",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpacePier",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Maintenance",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceMaintenance",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "RepairCrane",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceRepairCrane",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Warehouse",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceWarehouse",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Water",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceWater",
			"Comment" : "",
			"Arguments" :
			{

			}
		},
		{
			"Alias" : "Trade",
			"IsStatic" : "false",
			"ReturnType" : "VirtualSpaceTrade",
			"Comment" : "",
			"Arguments" :
			{

			}
		}
	],
	"VirtualSpaceTrade":
	[
		{
			"Alias" : "ThirdPartyBuyPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the general buy price for a third party for the given good/item.",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "ThirdPartySellPrice",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the general sell price for a third party for the given good/item.",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceTransferActions":
	[
		{
			"Alias" : "IsDirectTransferAllowed",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "Returns true if a trade via ship and kontor with the given filter is possible (based on current selection)",
			"Arguments" :
			{

			}
		}
	],
	"VirtualSpaceUniqueBuildings":
	[
		{
			"Alias" : "DuplicateObjectText",
			"IsStatic" : "false",
			"ReturnType" : "CAsset",
			"Comment" : "returns the proper GUID for the Text to show when trying to build a unique building duplicate",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				},
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"participantID" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "IsUniquenessFulfilled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "checks if the unique requirements for this object are fulfilled. That means either the given object doesn\'t require uniqueness or it\'s unique on the area/session/world",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				},
				"areaID" :
				{
					"Type" : "AreaID"
				},
				"ignoreID" :
				{
					"Type" : "GameObjectID"
				}
			}
		},
		{
			"Alias" : "IsUniquenessFulfilled",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "checks if the unique requirements for this object are fulfilled. That means either the given object doesn\'t require uniqueness or it\'s unique on the area/session/world",
			"Arguments" :
			{
				"buildingGUID" :
				{
					"Type" : "int"
				},
				"areaID" :
				{
					"Type" : "AreaID"
				}
			}
		}
	],
	"VirtualSpaceWarehouse":
	[
		{
			"Alias" : "StorageIncreaseToPreviousTier",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "Returns the base storage increase in comparison to the previous warehouse tier",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StorageBonus",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		},
		{
			"Alias" : "StrategicGood",
			"IsStatic" : "false",
			"ReturnType" : "int",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	],
	"VirtualSpaceWater":
	[
		{
			"Alias" : "NeedsWater",
			"IsStatic" : "false",
			"ReturnType" : "bool",
			"Comment" : "",
			"Arguments" :
			{
				"guid" :
				{
					"Type" : "int"
				}
			}
		}
	]}